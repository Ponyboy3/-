C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc\pack_file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.h>
   2          #include <iic.h>
   3          #include <ds1302.h>
   4          #include <intrins.h>
   5          #define uchar unsigned char 
   6          #define uint unsigned int 
   7            
   8          uchar code type1[]={0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf};
   9          uchar code type2[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  10          
  11          uchar num1,num2,num3,num4,num5,num6,num7,num8;
  12          uchar GN;
  13          uchar HZ;
  14          uchar hour,minute,second;
  15          uchar f_2ms;
  16          uchar t_2ms;
  17          uchar shidu=50;
  18          uchar temp,temp1;
  19          bit model;
  20          bit f_auto;
  21          bit beep;
  22          
  23          void Delay10ms()    //@11.0592MHz
  24          {
  25   1        unsigned char i, j;
  26   1      
  27   1        i = 108;
  28   1        j = 145;
  29   1        do
  30   1        {
  31   2          while (--j);
  32   2        } while (--i);
  33   1      }
  34          
  35          void smg_display(uchar n1,uchar n2,uchar n3,uchar n4,uchar n5,uchar n6,uchar n7,uchar n8)
  36          {
  37   1        uchar i;
  38   1        P2=(P2&0x1f)|0xc0;
  39   1        P0=type2[i];
  40   1        P2=(P2&0x1f);
  41   1        switch(i)
  42   1        {
  43   2          case 0:P2=(P2&0x1f)|0xe0;P0=type1[n1];P2=(P2&0x1f);break;
  44   2          case 1:P2=(P2&0x1f)|0xe0;P0=type1[n2];P2=(P2&0x1f);break;
  45   2          case 2:P2=(P2&0x1f)|0xe0;P0=type1[n3];P2=(P2&0x1f);break;
  46   2          case 3:P2=(P2&0x1f)|0xe0;P0=type1[n4];P2=(P2&0x1f);break;
  47   2          case 4:P2=(P2&0x1f)|0xe0;P0=type1[n5];P2=(P2&0x1f);break;
  48   2          case 5:P2=(P2&0x1f)|0xe0;P0=type1[n6];P2=(P2&0x1f);break;
  49   2          case 6:P2=(P2&0x1f)|0xe0;P0=type1[n7];P2=(P2&0x1f);break;
  50   2          case 7:P2=(P2&0x1f)|0xe0;P0=type1[n8];P2=(P2&0x1f);break;
  51   2        }
  52   1        i++;
  53   1        if(i==8)
  54   1          i=0;
C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 2   

  55   1      }
  56          ///////////////////////////////////anjian
  57          uchar key_scan()
  58          {
  59   1        uchar temp;
  60   1        temp=(~P3)&0x0f;
  61   1        if(temp==0) return 0;
  62   1        Delay10ms();
  63   1        temp=(~P3)&0x0f;
  64   1        if(temp==0) return 0; 
  65   1        
  66   1      return temp;    
  67   1      }
  68          
  69          void key_change()
  70          {
  71   1        uchar D;
  72   1        D=key_scan();
  73   1        switch(D)
  74   1        {
  75   2          case 8:GN=1;break;
  76   2          case 4:GN=2;break;    
  77   2          case 2:GN=3;break;    
  78   2          case 1:GN=4;break;    
  79   2          case 0:GN=0;break;        
  80   2        }
  81   1      }
  82          //////////////////////////////////24c02
  83          void xie_24c02(uchar addr,uchar dat)
  84          {
  85   1        IIC_Start( );
  86   1        IIC_SendByte(0xa0+0);
  87   1        IIC_WaitAck( );
  88   1        IIC_SendByte(addr);
  89   1        IIC_WaitAck( );
  90   1        IIC_SendByte(dat);
  91   1        IIC_WaitAck( );
  92   1        IIC_Stop( ); 
  93   1      }
  94          uchar du_24c02(uchar addr)
  95          {
  96   1        uchar D;
  97   1        IIC_Start( );
  98   1        IIC_SendByte(0xa0+0);
  99   1        IIC_WaitAck( );
 100   1        IIC_SendByte(addr);
 101   1        IIC_WaitAck( );
 102   1        IIC_Start( );
 103   1        IIC_SendByte(0xa0+1);
 104   1        IIC_WaitAck( );
 105   1        D=IIC_RecByte( ); 
 106   1        IIC_SendAck(1);
 107   1        IIC_Stop( ); 
 108   1        return D;
 109   1      }
 110          ///////////////////////////////////////ad
 111          void initial_adc()
 112          {
 113   1        IIC_Start( );
 114   1        IIC_SendByte(0x90+0);
 115   1        IIC_WaitAck( ); 
 116   1        IIC_SendByte(0x3);
C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 3   

 117   1        IIC_WaitAck( );
 118   1        IIC_Stop( );
 119   1      }
 120          uchar du_adc()
 121          {
 122   1        uchar D;
 123   1        IIC_Start( );
 124   1        IIC_SendByte(0x90+1);
 125   1        IIC_WaitAck( ); 
 126   1        D=IIC_RecByte( );
 127   1        IIC_SendAck(1);
 128   1        IIC_Stop( ); 
 129   1        return D;   
 130   1      }
 131          
 132          //////////////////////////////////1302
 133          void xie_ds1302()
 134          {
 135   1        Write_Ds1302_Byte( 0x8e,0x00 );
 136   1        Write_Ds1302_Byte( 0x84,0x08 );
 137   1        Write_Ds1302_Byte( 0x82,0x30 );
 138   1        Write_Ds1302_Byte( 0x80,0x50 );
 139   1      }
 140          void du_1302()
 141          {
 142   1        hour=Read_Ds1302_Byte( 0x85 );   hour=(hour>>4)*10+(hour&0x0f);
 143   1        minute=Read_Ds1302_Byte( 0x83 ); minute=(minute>>4)*10+(minute&0x0f);
 144   1        second=Read_Ds1302_Byte( 0x81 ); second=(second>>4)*10+(second&0x0f);
 145   1      }
 146          
 147          
 148          
 149          void time1int1()
 150          {
 151   1        EA=1;
 152   1        ET1=1;
 153   1        TR1=1;
 154   1        TMOD=(TMOD&0x0f)|0x10;
 155   1        TH1=(65536-2000/(120000/110592))/256;
 156   1        TL1=(65536-2000/(120000/110592))%256;
 157   1      }
 158          
 159          void main()
 160          {
 161   1        P2=(P2&0x1f)|0xa0;
 162   1        P0=0x0;
 163   1        P2=(P2&0x1f); 
 164   1        time1int1();
 165   1        xie_ds1302();
 166   1        initial_adc();
 167   1        while(1)
 168   1        {
 169   2          if(f_2ms==1)
 170   2          {
 171   3            f_2ms=0;
 172   3            key_change();
 173   3            
 174   3            
 175   3            if(GN==4)
 176   3            {       
 177   4              model=~model;
 178   4              while(key_scan());
C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 4   

 179   4            }
 180   3          
 181   3            if(model==0) //自动状态
 182   3            {
 183   4              if(GN==3)
 184   4              {
 185   5                f_auto=~f_auto; 
 186   5                while(key_scan());
 187   5              }       
 188   4              if(f_auto==0)
 189   4              {
 190   5                du_1302();
 191   5                shidu=du_24c02(0);
 192   5                num1=hour/10;num2=hour%10;
 193   5                num3=11;
 194   5                num4=second/10;num5=second%10;
 195   5                num6=10;
 196   5                num7=(temp1*100/255)/10;num8=(temp1*100/255)%10;
 197   5                if(++t_2ms==100)
 198   5                {
 199   6                  t_2ms=0;
 200   6                  temp1=du_adc();
 201   6                }
 202   5                if( (temp1*100/255) < shidu )
 203   5                {
 204   6                  EA=0;
 205   6                  P2=(P2&0x1f)|0xa0;
 206   6                  P0=0x10;
 207   6                  P2=(P2&0x1f); 
 208   6                  EA=1;           
 209   6                }
 210   5                else if( (temp1*100/255) > shidu )
 211   5                {
 212   6                  EA=0;
 213   6                  P2=(P2&0x1f)|0xa0;
 214   6                  P0=0x00;
 215   6                  P2=(P2&0x1f); 
 216   6                  EA=1;           
 217   6                } 
 218   5              }
 219   4              if(f_auto==1)
 220   4              {
 221   5                num1=num2=11;
 222   5                num3=num4=num5=num6=10;
 223   5                num7=shidu/10;num8=shidu%10;
 224   5                if(GN==2) //阈值+
 225   5                {
 226   6                  shidu=shidu+1;
 227   6                  if(shidu > 99)
 228   6                    shidu=99;
 229   6                 xie_24c02(0,shidu);
 230   6                 while(key_scan()); 
 231   6                }
 232   5                if(GN==1)  //阈值-
 233   5                {
 234   6                  shidu=shidu-1;
 235   6                  if(shidu < 1)
 236   6                    shidu=1;
 237   6                 xie_24c02(0,shidu);
 238   6                 while(key_scan()); 
 239   6                }         
 240   5              }
C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 5   

 241   4                  EA=0;
 242   4                  P0=0xff;
 243   4                  P2=(P2&0x1f)|0x80;
 244   4                  P0=0xfe;
 245   4                  P2=(P2&0x1f); 
 246   4                  EA=1;           
 247   4            }//自动状态
 248   3          
 249   3          
 250   3          if(model==1) //手动状态  //蜂鸣器与继电器处理方法，将继电器嵌入到蜂鸣器中，以及湿度采集中
 251   3          {
 252   4             if(GN==3)
 253   4             {
 254   5               beep=~beep;  
 255   5               while(key_scan());
 256   5             }
 257   4             if(GN==2)
 258   4             {
 259   5               HZ=1;  
 260   5               while(key_scan());
 261   5             }
 262   4             if(GN==1)
 263   4             {
 264   5               HZ=2;  
 265   5               while(key_scan());
 266   5             }       
 267   4             if(++t_2ms==100)
 268   4              {
 269   5                  t_2ms=0;
 270   5                  temp=du_adc()*100/256;
 271   5              }
 272   4              
 273   4             if(beep==0)    //开蜂鸣器
 274   4             {
 275   5                if( temp < shidu )
 276   5                {
 277   6                  EA=0;
 278   6                  P0=0x00;
 279   6                  P2=(P2&0x1f)|0xa0;
 280   6                  P0=0x40;
 281   6                  P2=(P2&0x1f); 
 282   6                  EA=1; 
 283   6                if(HZ==1)
 284   6                {   
 285   7                      EA=0;
 286   7                      P0=0x00;
 287   7                      P2=(P2&0x1f)|0xa0;
 288   7                      P0=0x10 | 0x40;
 289   7                      P2=(P2&0x1f); 
 290   7                      EA=1; 
 291   7                }       
 292   6                if(HZ==2)
 293   6                {
 294   7                      EA=0;
 295   7                      P0=0x00;
 296   7                      P2=(P2&0x1f)|0xa0;
 297   7                      P0=0x00 | 0x40;
 298   7                      P2=(P2&0x1f); 
 299   7                      EA=1; 
 300   7                 }            
 301   6              }
 302   5                if( temp > shidu )
C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 6   

 303   5                {
 304   6                  EA=0;
 305   6                  P0=0x00;
 306   6                  P2=(P2&0x1f)|0xa0;
 307   6                  P0=0x00;
 308   6                  P2=(P2&0x1f); 
 309   6                  EA=1; 
 310   6                if(HZ==1)
 311   6                {   
 312   7                      EA=0;
 313   7                      P0=0x00;
 314   7                      P2=(P2&0x1f)|0xa0;
 315   7                      P0=0x10;
 316   7                      P2=(P2&0x1f); 
 317   7                      EA=1; 
 318   7                }       
 319   6                if(HZ==2)
 320   6                {
 321   7                      EA=0;
 322   7                      P0=0x00;
 323   7                      P2=(P2&0x1f)|0xa0;
 324   7                      P0=0x00;
 325   7                      P2=(P2&0x1f); 
 326   7                      EA=1; 
 327   7                 }  
 328   6                }     
 329   5              } 
 330   4      
 331   4             if(beep==1)  //关蜂鸣器
 332   4             {
 333   5                EA=0;
 334   5                P0=0x00;
 335   5                P2=(P2&0x1f)|0xa0;
 336   5                P0=0x00;
 337   5                P2=(P2&0x1f); 
 338   5                EA=1;
 339   5      
 340   5            if(HZ==1)
 341   5            {   
 342   6                  EA=0;
 343   6                  P0=0x00;
 344   6                  P2=(P2&0x1f)|0xa0;
 345   6                  P0=0x10;
 346   6                  P2=(P2&0x1f); 
 347   6                  EA=1; 
 348   6            }       
 349   5            if(HZ==2)
 350   5            {
 351   6                  EA=0;
 352   6                  P0=0x00;
 353   6                  P2=(P2&0x1f)|0xa0;
 354   6                  P0=0x00;
 355   6                  P2=(P2&0x1f); 
 356   6                  EA=1; 
 357   6            }          
 358   5             }       
 359   4                  EA=0;
 360   4                  P0=0xff;
 361   4                  P2=(P2&0x1f)|0x80;
 362   4                  P0=0xfd;
 363   4                  P2=(P2&0x1f); 
 364   4                  EA=1;       
C51 COMPILER V9.55   MAIN                                                                  03/21/2022 18:26:21 PAGE 7   

 365   4          }//手动
 366   3          
 367   3        
 368   3         }//f_2ms
 369   2        }//while
 370   1      }
 371          
 372          
 373          void cl_time1int1() interrupt 3
 374          {
 375   1        TH1=(65536-2000/(120000/110592))/256;
 376   1        TL1=(65536-2000/(120000/110592))%256; 
 377   1        
 378   1        smg_display(num1,num2,num3,num4,num5,num6,num7,num8);
 379   1        
 380   1        f_2ms=1;
 381   1      }
 382          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1249    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     18      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

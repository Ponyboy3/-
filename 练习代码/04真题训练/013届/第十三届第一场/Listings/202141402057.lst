C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 202141402057
OBJECT MODULE PLACED IN .\Objects\202141402057.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 202141402057.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\202141402057.lst) TABS(2) OBJECT(.\Objects\202141402057.obj)

line level    source

   1          #include "reg52.h"
   2          #include "onewire.h"
   3          #include "ds1302.h"  
   4          
   5          sbit R1 = P3^3;
   6          sbit R2 = P3^2;
   7          sbit C1 = P3^5;
   8          sbit C2 = P3^4;
   9          
  10          
  11          unsigned char code SMG_NoDot[10] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
  12          unsigned char code SMG_Dot[10] = {0x40,0x79,0x24,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
  13          
  14          unsigned char Read[7] = {0x81,0x83,0x85,0x87,0x89,0x8a,0x8c};
  15          unsigned char Write[7] = {0x80,0x82,0x84,0x86,0x88,0x8b,0x8d};
  16          unsigned char Time[7] = {0x30,0x59,0x23,0x12,0x03,0x07,0x23};
  17          
  18          
  19          unsigned char stat_smg = 1;
  20          unsigned char mode = 0;//控制模式 
  21          
  22          unsigned char T_h = 0;
  23          unsigned char T_m = 0;
  24          unsigned char T_s = 0;
  25          
  26          unsigned char stat_jdq = 0x00;
  27          unsigned char stat_led = 0xff;
  28          unsigned int count_100ms = 0;
  29          unsigned char T_5s = 0;
  30          unsigned int count_5s = 0;
  31          
  32          float temp_ds18b20 = 0;//实际温度
  33          unsigned int smg_ds18b20 = 0;//转换温度
  34          unsigned int smg_temp = 23;//温度参数
  35          
  36          //==========数码管显示======
  37          void Delay_SMG(unsigned int t)
  38          {
  39   1        while(t--);
  40   1      }
  41          
  42          void Display_SMG_Bit(unsigned char pos,unsigned char value)
  43          {
  44   1        P2 = (P2 & 0x1f) | 0xc0;
  45   1        P0 = 0x01 << pos;
  46   1        P2 &= 0x1f;
  47   1        
  48   1        P2 = (P2 & 0x1f) | 0xe0;
  49   1        P0 = value;
  50   1        P2 &= 0x1f;
  51   1        
  52   1        Delay_SMG(500);
  53   1        
  54   1        P2 = (P2 & 0x1f) | 0xc0;
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 2   

  55   1        P0 = 0x01 << pos;
  56   1        P2 &= 0x1f;
  57   1        
  58   1        P2 = (P2 & 0x1f) | 0xe0;
  59   1        P0 = 0xff;
  60   1        P2 &= 0x1f;
  61   1        
  62   1      }
  63          
  64          void Display_SMG()
  65          {
  66   1        switch(stat_smg)
  67   1        {
  68   2          case 1: //U1 温度显示界面
  69   2            Display_SMG_Bit(0,0xc1);
  70   2            Display_SMG_Bit(1,SMG_NoDot[1]);
  71   2            
  72   2            Display_SMG_Bit(5,SMG_NoDot[smg_ds18b20 / 100]);
  73   2            Display_SMG_Bit(6,SMG_Dot[(smg_ds18b20 % 100) / 10]);
  74   2            Display_SMG_Bit(7,SMG_NoDot[smg_ds18b20 % 10]);
  75   2          break;
  76   2          
  77   2          case 2://U2  时间显示界面--时，分
  78   2            Display_SMG_Bit(0,0xc1);
  79   2            Display_SMG_Bit(1,SMG_NoDot[2]);
  80   2          
  81   2            Display_SMG_Bit(3,SMG_NoDot[T_h / 16]);
  82   2            Display_SMG_Bit(4,SMG_NoDot[T_h % 16]);
  83   2            Display_SMG_Bit(5,0xbf);
  84   2            Display_SMG_Bit(6,SMG_NoDot[T_m / 16]);
  85   2            Display_SMG_Bit(7,SMG_NoDot[T_m % 16]);
  86   2          break;
  87   2          
  88   2          case 3://U3 参数设置界面
  89   2            Display_SMG_Bit(0,0xc1);
  90   2            Display_SMG_Bit(1,SMG_NoDot[3]);
  91   2          
  92   2            Display_SMG_Bit(6,SMG_NoDot[smg_temp / 10]);
  93   2            Display_SMG_Bit(7,SMG_NoDot[smg_temp % 10]);
  94   2          break;
  95   2          
  96   2          case 4://时间显示--分，秒
  97   2            Display_SMG_Bit(0,0xc1);
  98   2            Display_SMG_Bit(1,SMG_NoDot[2]);
  99   2          
 100   2            Display_SMG_Bit(3,SMG_NoDot[T_m / 16]);
 101   2            Display_SMG_Bit(4,SMG_NoDot[T_m % 16]);
 102   2            Display_SMG_Bit(5,0xbf);
 103   2            Display_SMG_Bit(6,SMG_NoDot[T_s / 16]);
 104   2            Display_SMG_Bit(7,SMG_NoDot[T_s % 16]);
 105   2          break;
 106   2        }
 107   1      }
 108          //==========初始化DS1302====
 109          void Init_DS1302()
 110          {
 111   1        unsigned char i;
 112   1        Write_Ds1302_Byte( 0x8e,0x00 );//接触写保护
 113   1        for(i = 0;i < 7;i++)
 114   1        {
 115   2          Write_Ds1302_Byte( Write[i],Time[i] );
 116   2        }
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 3   

 117   1        Write_Ds1302_Byte( 0x8e,0x80 );//使能写保护
 118   1      }
 119          
 120          //=========读取DS1302=======
 121          void Read_Ds1302()
 122          {
 123   1        T_s = Read_Ds1302_Byte(Read[0]);
 124   1        T_m = Read_Ds1302_Byte(Read[1]);
 125   1        T_h = Read_Ds1302_Byte(Read[2]);
 126   1        
 127   1        if(T_m == 0 && T_s == 0)
 128   1        {
 129   2          stat_led &= ~0x01; 
 130   2          P2 = (P2 & 0x1f) | 0x80;
 131   2          P0 = stat_led;//L1 点亮5秒
 132   2          P2 &= 0x1f;
 133   2          
 134   2          //点亮5秒
 135   2          T_5s = 1;
 136   2        }
 137   1      }
 138          
 139          //===========定时器T0======
 140          void Init_T0()
 141          {
 142   1        TMOD = 0x01;
 143   1        TH0 = (65536 - 50000) / 256;//定时50ms
 144   1        TL0 = (65536 - 50000) % 256;
 145   1        
 146   1        ET0 = 1;
 147   1        EA = 1;
 148   1        TR0 = 1;
 149   1      }
 150          
 151          void SeviceT0() interrupt 1
 152          {
 153   1        TH0 = (65536 - 50000) / 256;//定时50ms
 154   1        TL0 = (65536 - 50000) % 256;
 155   1        
 156   1        Read_Ds1302();        //每50ms更新一次时分秒
 157   1        if(stat_jdq == 0x10)  //如果继电器吸合
 158   1        {
 159   2          count_100ms++;
 160   2          if(count_100ms == 2)//L3以0.1s亮灭
 161   2          {
 162   3            count_100ms = 0;
 163   3            if((stat_led & 0x04) == 0x04)//L3熄灭
 164   3            {
 165   4              stat_led &= ~0x04;//点亮L3
 166   4            }
 167   3            else
 168   3            {
 169   4              stat_led |= 0x04;//熄灭L3
 170   4            }
 171   3            P2 = (P2 & 0x1f) | 0x80;
 172   3            P0 = stat_led;
 173   3            P2 &= 0x1f;
 174   3          }
 175   2        }
 176   1        if(T_5s == 1)
 177   1        {
 178   2          count_5s++;
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 4   

 179   2          if(mode == 1)//在时间控制模式
 180   2          {
 181   3            stat_jdq = 0x10;
 182   3          }
 183   2          if(count_5s == 100)//5s
 184   2          {
 185   3            count_5s = 0;
 186   3            T_5s = 0;
 187   3            stat_jdq = 0x00;
 188   3            stat_led |= 0x05;//L1,L3熄灭
 189   3            P2 = (P2 & 0x1f) | 0x80;
 190   3            P0 = stat_led;//L1 
 191   3            P2 &= 0x1f;
 192   3          }
 193   2          P2 = (P2 & 0x1f) | 0xa0;
 194   2          P0 = stat_jdq;//L1 点亮5秒
 195   2          P2 &= 0x1f;
 196   2        }
 197   1      }
 198          //==========DS18B20温度读出与显示===
 199          void Init_DS18B20_Temp()
 200          {
 201   1        unsigned char LSB,MSB;
 202   1        
 203   1        init_ds18b20();
 204   1        Write_DS18B20(0xcc);
 205   1        Write_DS18B20(0x44);
 206   1        
 207   1        do
 208   1        {
 209   2          init_ds18b20();
 210   2          Write_DS18B20(0xcc);
 211   2          Write_DS18B20(0xbe);
 212   2          LSB = Read_DS18B20();
 213   2          MSB = Read_DS18B20();
 214   2          MSB = (MSB << 4) | (LSB >> 4);
 215   2        }while(MSB == 85);
 216   1      }
 217          void Delay_DS18B20(unsigned int t)
 218          {
 219   1        while(t--)
 220   1        {
 221   2          Display_SMG();
 222   2        }
 223   1      }
 224          void Read_DS18B20_Temp()
 225          {
 226   1        unsigned char LSB,MSB;
 227   1        unsigned int temp = 0;
 228   1        
 229   1        init_ds18b20();
 230   1        Write_DS18B20(0xcc);
 231   1        Write_DS18B20(0x44);
 232   1        
 233   1        Display_SMG();
 234   1        
 235   1        init_ds18b20();
 236   1        
 237   1        Display_SMG();
 238   1        Write_DS18B20(0xcc);
 239   1        Write_DS18B20(0xbe);
 240   1        LSB = Read_DS18B20();
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 5   

 241   1        MSB = Read_DS18B20();
 242   1        temp = MSB;
 243   1        temp = (temp << 8) | LSB;
 244   1        if((temp & 0xf800) == 0x0000)
 245   1        {
 246   2          temp_ds18b20 =  temp * 0.0625;
 247   2        }
 248   1        smg_ds18b20 = temp_ds18b20 * 10;
 249   1        Display_SMG();
 250   1        
 251   1        if(mode == 0)
 252   1        {
 253   2          if(smg_ds18b20 > smg_temp * 10)
 254   2          {
 255   3            stat_jdq = 0x10;
 256   3          }
 257   2          else
 258   2          {
 259   3            stat_jdq = 0x00;
 260   3            stat_led |= 0x04;
 261   3          }
 262   2          P2 = (P2 & 0x1f) | 0x80;
 263   2          P0 = stat_led;
 264   2          P2 &= 0x1f;
 265   2          
 266   2          P2 = (P2 & 0x1f) | 0xa0;
 267   2          P0 = stat_jdq;
 268   2          P2 &= 0x1f;
 269   2        }
 270   1      }
 271          
 272          //==========矩阵键盘========
 273          void Scan_Keys()
 274          {
 275   1        C1 = 1;
 276   1        C2 = 1;
 277   1        R1 = 0;
 278   1        R2 = 1;
 279   1        if(C1 == 0)//S12按下
 280   1        {
 281   2          
 282   2            switch(stat_smg)
 283   2            {
 284   3              case 1:
 285   3                stat_smg = 2;
 286   3              break;
 287   3              
 288   3              case 2:
 289   3                stat_smg = 3;
 290   3              break;
 291   3              
 292   3              case 3:
 293   3                stat_smg = 1;
 294   3              break;
 295   3            }
 296   2            while(C1 == 0)
 297   2            {
 298   3              if(stat_smg == 1)
 299   3              {
 300   4                Read_DS18B20_Temp();//不影响数据采集
 301   4              }
 302   3              Display_SMG();
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 6   

 303   3            }
 304   2          
 305   2        }
 306   1        if(C2 == 0)//S16按下
 307   1        {
 308   2          
 309   2            if(stat_smg == 3);//在设置参数下有效
 310   2            {
 311   3              if(smg_temp == 99)
 312   3              {
 313   4                smg_temp = 99;
 314   4              }
 315   3              else
 316   3              {
 317   4                smg_temp++;
 318   4              }
 319   3              while(C2 == 0)
 320   3              {
 321   4                Display_SMG();
 322   4              }
 323   3            }
 324   2          
 325   2        }
 326   1        
 327   1        C1 = 1;
 328   1        C2 = 1;
 329   1        R1 = 1;
 330   1        R2 = 0;
 331   1        if(C1 == 0)//S13按下
 332   1        {
 333   2          
 334   2          if(stat_smg == 3)
 335   2          {
 336   3              
 337   3            
 338   3            if(mode == 0)
 339   3            {
 340   4              mode = 1;
 341   4              if(T_5s == 0)
 342   4              {
 343   5                stat_jdq = 0x00;
 344   5              }
 345   4              stat_led |= 0x02;//L2熄灭
 346   4            }
 347   3            else if(mode == 1)
 348   3            {
 349   4              mode = 0;
 350   4              if(T_5s == 1)
 351   4              {
 352   5                if(temp_ds18b20 <= smg_temp * 10)
 353   5                {
 354   6                  stat_jdq = 0x00;
 355   6                }
 356   5              }
 357   4              stat_led &= ~0x02;//L2点亮
 358   4            }
 359   3          }
 360   2            if(stat_jdq == 0x00)
 361   2            {
 362   3              stat_led |= 0x04;//L3熄灭
 363   3            }
 364   2            P2 = (P2 & 0x1f) | 0x80;
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 7   

 365   2            P0 = stat_led;
 366   2            P2 &= 0x1f;
 367   2          
 368   2            P2 = (P2 & 0x1f) | 0xa0;
 369   2            P0 = stat_jdq;
 370   2            P2 &= 0x1f;
 371   2            while(C1 == 0)
 372   2            {
 373   3              Read_DS18B20_Temp();
 374   3              Display_SMG();
 375   3            }
 376   2          
 377   2        }
 378   1        if(C2 == 0)//S17按下
 379   1        {
 380   2          
 381   2            if(stat_smg == 3);//在设置参数下有效
 382   2            {
 383   3              smg_temp--;
 384   3              if(smg_temp == 10)
 385   3              {
 386   4                smg_temp = 10;
 387   4              }
 388   3              while(C2 == 0)
 389   3              {
 390   4                Display_SMG();
 391   4              }
 392   3            }
 393   2            
 394   2            if(stat_smg == 2)
 395   2            {
 396   3              stat_smg = 4;
 397   3              while(C2 == 0)
 398   3              {
 399   4                Display_SMG();
 400   4              }
 401   3              stat_smg = 2;
 402   3            }
 403   2        }
 404   1        
 405   1      }
 406          
 407          //==========系统初始化======
 408          void Init_Sys()
 409          {
 410   1        P2 = (P2 & 0x1f) | 0x80;
 411   1        P0 = 0xff;
 412   1        P2 &= 0x1f;
 413   1        
 414   1        P2 = (P2 & 0x1f) | 0xa0;
 415   1        P0 = 0x00;
 416   1        P2 &= 0x1f;
 417   1        
 418   1        Init_DS18B20_Temp();
 419   1        mode = 0;
 420   1        
 421   1        stat_led &= ~0x02;
 422   1        P2 = (P2 & 0x1f) | 0x80;
 423   1        P0 = stat_led;
 424   1        P2 &= 0x1f;
 425   1        
 426   1        Init_DS1302();
C51 COMPILER V9.59.0.0   202141402057                                                      03/12/2023 18:52:06 PAGE 8   

 427   1        Init_T0();
 428   1      }
 429          
 430          //=========主函数
 431          void main()
 432          {
 433   1        Init_Sys();
 434   1        
 435   1        while(1)
 436   1        {
 437   2          Read_DS18B20_Temp();
 438   2          Scan_Keys();
 439   2        }
 440   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1302    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     41       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

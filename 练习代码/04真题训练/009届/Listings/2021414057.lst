C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 2021414057
OBJECT MODULE PLACED IN .\Objects\2021414057.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 2021414057.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\2021414057.lst) TABS(2) OBJECT(.\Objects\2021414057.obj)

line level    source

   1          #include "reg52.h"
   2          #include "iic.h"
   3          
   4          #define uchar unsigned char
   5          
   6          uchar code type1[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf};
   7          uchar code type2[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
   8          uchar code type3[]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf,0xbf,0x7f};
   9          uchar code type4[]={0x7f,0xbf,0xdf,0xef,0xf7,0xfb,0xfd,0xfe};
  10          uchar code type5[]={0x7e,0xbd,0xdb,0xe7};
  11          uchar code type6[]={0xe7,0xdb,0xbd,0x7e};
  12          
  13          uchar num1,num2,num3,num4,num5,num6,num7,num8;
  14          uchar GN;
  15          uchar f_2ms;
  16          uchar t_10ms;
  17          unsigned int t_2ms,tt_2ms;
  18          
  19          uchar model,led_mod;
  20          char led1,led2,led3,led4;
  21          char a,b;
  22          uchar gap = 800;
  23          bit f_led;
  24          bit shanshuo;
  25          
  26          
  27          //============数码管显示模块=========
  28          void Delay_SMG(unsigned int t)
  29          {
  30   1        while(t--);
  31   1      }
  32          
  33          void smg_display(uchar n1,uchar n2,uchar n3,uchar n4,uchar n5,uchar n6,uchar n7,uchar n8)
  34          {
  35   1        char i;
  36   1        P0=0xff;
  37   1        P2=(P2&0x1f)|0xc0;
  38   1        P0=type2[i];
  39   1        P2=(P2&0x1f);
  40   1        switch(i)
  41   1        {
  42   2          case 0:P2=(P2&0x1f)|0xe0;P0=type1[n1];P2=(P2&0x1f);break;
  43   2          case 1:P2=(P2&0x1f)|0xe0;P0=type1[n2];P2=(P2&0x1f);break;   
  44   2          case 2:P2=(P2&0x1f)|0xe0;P0=type1[n3];P2=(P2&0x1f);break;   
  45   2          case 3:P2=(P2&0x1f)|0xe0;P0=type1[n4];P2=(P2&0x1f);break;   
  46   2          case 4:P2=(P2&0x1f)|0xe0;P0=type1[n5];P2=(P2&0x1f);break;   
  47   2          case 5:P2=(P2&0x1f)|0xe0;P0=type1[n6];P2=(P2&0x1f);break;   
  48   2          case 6:P2=(P2&0x1f)|0xe0;P0=type1[n7];P2=(P2&0x1f);break;   
  49   2          case 7:P2=(P2&0x1f)|0xe0;P0=type1[n8];P2=(P2&0x1f);break;   
  50   2        }
  51   1        if(++i==8)
  52   1          i=0;  
  53   1      }
  54          //===============按键控制模块========
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 2   

  55          uchar  key_scan()
  56          {
  57   1        char temp;
  58   1        temp=(~P3)&0x0f;
  59   1        if(temp==0) return 0;
  60   1        Delay_SMG(100);
  61   1        temp=(~P3)&0x0f;
  62   1        if(temp==0) return 0; 
  63   1        return temp;
  64   1      }
  65          void key_change()
  66          {
  67   1        char D;
  68   1        D=key_scan();
  69   1        switch(D)
  70   1        {
  71   2          case 8:GN=1;break;
  72   2          case 4:GN=2;break;    
  73   2          case 2:GN=3;break;    
  74   2          case 1:GN=4;break;    
  75   2          case 0:GN=0;break;      
  76   2        }
  77   1      }
  78          
  79          //=============Rb2电压采集===========、
  80          uchar Read_Rb2()
  81          {
  82   1        uchar tmp;
  83   1        IIC_Start();
  84   1        IIC_SendByte(0x91); 
  85   1        IIC_WaitAck();
  86   1        tmp = IIC_RecByte();
  87   1        IIC_SendAck(1); 
  88   1        IIC_Stop();
  89   1        return tmp;
  90   1      }
  91          
  92          uchar adc_change()
  93          {
  94   1        uchar D,f;
  95   1        D=Read_Rb2();
  96   1        if(D<64)
  97   1        {
  98   2          f=1;a=1;
  99   2        }
 100   1        if((D>64) && (D<128))
 101   1        {
 102   2          f=3;a=2;
 103   2        } 
 104   1        if((D>128) && (D<192))
 105   1        {
 106   2          f=5;a=3;
 107   2        }   
 108   1        if((D>192) && (D<256))
 109   1        {
 110   2          f=7;a=4;
 111   2        } 
 112   1        return f;
 113   1      }
 114          //=============EEPROM储存==========
 115          void Write_24C02(uchar addr,uchar dat)
 116          {
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 3   

 117   1        IIC_Start();
 118   1        IIC_SendByte(0xa0);
 119   1        IIC_WaitAck();
 120   1        IIC_SendByte(addr);
 121   1        IIC_WaitAck();
 122   1        IIC_SendByte(dat);
 123   1        IIC_WaitAck();
 124   1        IIC_Stop();
 125   1      }
 126          
 127          uchar Read_24C02(uchar addr)
 128          {
 129   1        uchar tmp;
 130   1        IIC_Start();
 131   1        IIC_SendByte(0xa0);
 132   1        IIC_WaitAck();
 133   1        IIC_SendByte(addr);
 134   1        IIC_WaitAck();
 135   1        IIC_Start();
 136   1        IIC_SendByte(0xa1);
 137   1        IIC_WaitAck();
 138   1        tmp = IIC_RecByte();
 139   1        IIC_SendAck(1); 
 140   1        IIC_Stop();
 141   1        return tmp;
 142   1      }
 143          //==============定时器1========
 144          void Init_T1()
 145          {
 146   1        TMOD = 0x01;
 147   1        TH1 = (65536 - 2000) / 256;  //T1 控制PWM ,T0 控制流转时间
 148   1        TL1 = (65536 - 2000) % 256;
 149   1        
 150   1        EA = 1;
 151   1        ET1 = 1;
 152   1        TR1 = 1;
 153   1      }
 154          //==============初始化模块===========
 155          void Init_Sys()
 156          {
 157   1        P2 = (P2 & 0x1f) | 0x80;//选择Led控制
 158   1        P0 = 0xff;              //初始熄灭所有Led
 159   1        P2 &= 0x1f;             //关闭锁存器
 160   1        
 161   1        P2 = (P2 & 0x1f) | 0xa0;//选择蜂鸣器、继电器控制
 162   1        P0 = 0x00;              //初始关闭所有
 163   1        P2 &= 0x1f;             //关闭锁存器
 164   1        
 165   1        Init_T1();
 166   1        
 167   1        IIC_Start();
 168   1        IIC_SendByte(0x90);
 169   1        IIC_WaitAck();
 170   1        IIC_SendByte(0x03);
 171   1        IIC_WaitAck();
 172   1        IIC_Stop();
 173   1        
 174   1        gap = Read_24C02(0)*10;
 175   1        num1=10;num2=10;num3=10;num4=10;num5=10;num6=10;num7=10;num8=10;
 176   1      }
 177          void main()
 178          {
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 4   

 179   1        Init_Sys();
 180   1        while(1)
 181   1        {
 182   2          key_scan();
 183   2          if(f_2ms==1)
 184   2          {
 185   3            f_2ms=0;
 186   3            key_change();
 187   3            if(GN == 4)
 188   3            {
 189   4              f_led=~f_led;
 190   4              while(key_scan());
 191   4            }
 192   3            
 193   3            if(f_led == 0) //关闭状态
 194   3            {
 195   4              P0 = 0xff;
 196   4              P2 = (P2 & 0x1f) | 0x80;
 197   4              P0 = 0xff;              
 198   4              P2 &= 0x1f;
 199   4              b = adc_change();
 200   4              if(GN == 1)
 201   4              {
 202   5                num1=10;num2=10;num3=10;num4=10;num5=10;num6=10;num7=11;num8=a;
 203   5                while(key_scan());
 204   5                num1=10;num2=10;num3=10;num4=10;num5=10;num6=10;num7=10;num8=10;
 205   5              }
 206   4            }
 207   3            if(f_led == 1)
 208   3            {
 209   4              if(GN == 3)
 210   4              {
 211   5                model++;
 212   5                if(model == 3)
 213   5                  model = 0;
 214   5                while(key_scan());
 215   5              }
 216   4              switch(model)
 217   4              {
 218   5                case 0:
 219   5                  if(GN == 1)
 220   5                  {
 221   6                    num1=10;num2=10;num3=10;num4=10;num5=10;num6=10;num7=11;num8=a;
 222   6                    while(key_scan());
 223   6                  }
 224   5                  num1=10;num2=10;num3=10;num4=10;num5=10;num6=10;num7=10;num8=10;
 225   5                  if(led_mod == 0)
 226   5                  {
 227   6                    if(++t_10ms == 10)
 228   6                    {
 229   7                      t_10ms = 0;
 230   7                      P0 = 0xff;
 231   7                      P2 = (P2 & 0x1f) | 0x80;
 232   7                      P0 = type3[led1];
 233   7                      P2 &= 0x1f;
 234   7                    }
 235   6                    if(t_10ms == adc_change())
 236   6                    {
 237   7                      P0 = 0xff;
 238   7                      P2 = (P2 & 0x1f) | 0x80;
 239   7                      P0 = 0xff;
 240   7                      P2 &= 0x1f;
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 5   

 241   7                    }
 242   6                    if(++t_2ms == gap/2)
 243   6                    {
 244   7                      t_2ms = 0;
 245   7                      led1++;
 246   7                      if(led1 == 8)
 247   7                        led1 = 0;
 248   7                    }
 249   6                  }
 250   5                  if(led_mod == 1)
 251   5                  {
 252   6                    if(++t_10ms == 10)
 253   6                    {
 254   7                      t_10ms = 0;
 255   7                      P0 = 0xff;
 256   7                      P2 = (P2 & 0x1f) | 0x80;
 257   7                      P0 = type4[led2];
 258   7                      P2 &= 0x1f;
 259   7                    }
 260   6                    if(t_10ms == adc_change())
 261   6                    {
 262   7                      P0 = 0xff;
 263   7                      P2 = (P2 & 0x1f) | 0x80;
 264   7                      P0 = 0xff;
 265   7                      P2 &= 0x1f;
 266   7                    }
 267   6                    if(++t_2ms == gap/2)
 268   6                    {
 269   7                      t_2ms = 0;
 270   7                      led2++;
 271   7                      if(led2 == 8)
 272   7                        led2 = 0;
 273   7                    }
 274   6                  }
 275   5                  if(led_mod == 2)
 276   5                  {
 277   6                    if(++t_10ms == 10)
 278   6                    {
 279   7                      t_10ms = 0;
 280   7                      P0 = 0xff;
 281   7                      P2 = (P2 & 0x1f) | 0x80;
 282   7                      P0 = type5[led3];
 283   7                      P2 &= 0x1f;
 284   7                    }
 285   6                    if(t_10ms == adc_change())
 286   6                    {
 287   7                      P0 = 0xff;
 288   7                      P2 = (P2 & 0x1f) | 0x80;
 289   7                      P0 = 0xff;
 290   7                      P2 &= 0x1f;
 291   7                    }
 292   6                    if(++t_2ms == gap/2)
 293   6                    {
 294   7                      t_2ms = 0;
 295   7                      led3++;
 296   7                      if(led3 == 4)
 297   7                        led3 = 0;
 298   7                    }
 299   6                  }
 300   5                  if(led_mod == 3)
 301   5                  {
 302   6                    if(++t_10ms == 10)
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 6   

 303   6                    {
 304   7                      t_10ms = 0;
 305   7                      P0 = 0xff;
 306   7                      P2 = (P2 & 0x1f) | 0x80;
 307   7                      P0 = type6[led4];
 308   7                      P2 &= 0x1f;
 309   7                    }
 310   6                    if(t_10ms == adc_change())
 311   6                    {
 312   7                      P0 = 0xff;
 313   7                      P2 = (P2 & 0x1f) | 0x80;
 314   7                      P0 = 0xff;
 315   7                      P2 &= 0x1f;
 316   7                    }
 317   6                    if(++t_2ms == gap/2)
 318   6                    {
 319   7                      t_2ms = 0;
 320   7                      led4++;
 321   7                      if(led4 == 4)
 322   7                        led4 = 0;
 323   7                    }
 324   6                  }
 325   5                  break;
 326   5                  
 327   5                case 1:
 328   5                  if(GN == 2)
 329   5                  {
 330   6                    if(led_mod == 3)
 331   6                      led_mod = 3;
 332   6                    else
 333   6                      led_mod++;
 334   6                    while(key_scan());
 335   6                  }
 336   5                  if(GN == 1)
 337   5                  {
 338   6                    if(led_mod == 0)
 339   6                      led_mod = 0;
 340   6                    else
 341   6                      led_mod--;
 342   6                    while(key_scan());
 343   6                  }
 344   5                  if(++tt_2ms==200)
 345   5                  {
 346   6                    tt_2ms = 0;
 347   6                    shanshuo = ~shanshuo;
 348   6                  }
 349   5                  if(shanshuo == 0)
 350   5                  {
 351   6                    num1=11;num2=led_mod+1;num3=11;
 352   6                  }
 353   5                  else
 354   5                  {
 355   6                    num1=10;num2=10;num3=10;
 356   6                  }
 357   5                  num4 = 10;
 358   5                  if(gap > 999)
 359   5                  {
 360   6                    num5=gap/1000;num6=gap%1000/100;num7=gap%100/10;num8=gap%10;
 361   6                  }
 362   5                  else
 363   5                  {
 364   6                    num5=10;num6=gap/100;num7=gap%100/10;num8=gap%10; 
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 7   

 365   6                  }
 366   5                break;
 367   5                  
 368   5                case 2:
 369   5                  if(GN == 2)
 370   5                  {
 371   6                    if(gap > 1100)
 372   6                      gap = 1200;
 373   6                    else
 374   6                      gap += 100;
 375   6                    Write_24C02(0,gap/10);
 376   6                    while(key_scan());
 377   6                  }
 378   5                  if(GN == 1)
 379   5                  {
 380   6                    if(gap < 400)
 381   6                      gap = 400;
 382   6                    else
 383   6                      gap -= 100;
 384   6                    Write_24C02(0,gap/10);
 385   6                    while(key_scan());
 386   6                  }
 387   5                  if(++tt_2ms == 200)
 388   5                  {
 389   6                    tt_2ms = 0;
 390   6                    shanshuo = ~shanshuo;
 391   6                  }
 392   5                  if(shanshuo == 0)
 393   5                  {
 394   6                    if(gap > 999)
 395   6                    {
 396   7                      num5=gap/1000;num6=gap%1000/100;num7=gap%100/10;num8=gap%10;
 397   7                    }
 398   6                    else
 399   6                    {
 400   7                      num5=10;num6=gap/100;num7=gap%100/10;num8=gap%10; 
 401   7                    }
 402   6                  }
 403   5                  else
 404   5                  {
 405   6                    num5=10;num6=10;num7=10;num8=10;
 406   6                  }
 407   5                  num1=11;num2=led_mod+1;num3=11;num4=10;
 408   5                break;
 409   5              }
 410   4            }
 411   3          }
 412   2        }
 413   1      }
 414          
 415          void Service_T0() interrupt 3
 416          {
 417   1        TH1 = (65536 - 2000) / 256;  //T1 控制PWM ,T0 控制流转时间
 418   1        TL1 = (65536 - 2000) % 256;
 419   1        
 420   1        smg_display(num1,num2,num3,num4,num5,num6,num7,num8);
 421   1        f_2ms=1;
 422   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1795    ----
C51 COMPILER V9.59.0.0   2021414057                                                        03/19/2023 13:31:03 PAGE 8   

   CONSTANT SIZE    =     44    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     24      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

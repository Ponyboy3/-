C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 20214140
OBJECT MODULE PLACED IN .\Objects\20214140.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 20214140.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -20214140.lst) TABS(2) OBJECT(.\Objects\20214140.obj)

line level    source

   1          #include "reg52.h"
   2          #include "iic.h"
   3          
   4          #define uchar unsigned char
   5          
   6          uchar code type1[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,
   7                                     0xff,0xbf,
   8                                     0x8e,0xc1,
   9                                     0x70,0x24,0x30,0x19,0x12,0x01,0x78,0x00,0x10};
  10          uchar code type2[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  11              
  12          unsigned int dat_f = 0; 
  13          uchar num1,num2,num3,num4,num5,num6,num7,num8;
  14          unsigned int t_2ms;
  15          uchar GN;
  16          unsigned int VRB2,VDAC;
  17          bit f_2ms;
  18          bit flag;
  19          bit f_S4;
  20          bit f_led,f_smg,f_VRB2;
  21          
  22          //=========数码管模块==========
  23          void Delay_SMG(unsigned int t)
  24          {
  25   1        while(t--);
  26   1      }
  27          
  28          void Dispaly_SMG(char n1,char n2,char n3,char n4,char n5,char n6,char n7,char n8)
  29          {
  30   1        char i;
  31   1        P0 = 0xff;
  32   1        P2 = ((P2 & 0x1f) | 0xc0);
  33   1        P0 = type2[i];
  34   1        P2 &= 0x1f;
  35   1        switch(i)
  36   1        {
  37   2          case 0:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n1];P2 &= 0x1f;break;
  38   2          case 1:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n2];P2 &= 0x1f;break;
  39   2          case 2:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n3];P2 &= 0x1f;break;
  40   2          case 3:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n4];P2 &= 0x1f;break;
  41   2          case 4:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n5];P2 &= 0x1f;break;
  42   2          case 5:P2 = ((P2 & 0x1f) | 0xe0);
  43   2                      if(f_smg==0 && f_S4 == 0)
  44   2                        P0 = type1[n6]&0x7f;
  45   2                      else
  46   2                        P0 = type1[n6];
  47   2                      P2 &= 0x1f;break;
  48   2          
  49   2          case 6:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n7];P2 &= 0x1f;break;
  50   2          case 7:P2 = ((P2 & 0x1f) | 0xe0);P0 = type1[n8];P2 &= 0x1f;break;
  51   2        }
  52   1        if(++i == 8)
  53   1          i = 0;
  54   1      }
C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 2   

  55          //=========按键模块=======
  56          uchar Scan_Keys()
  57          {
  58   1        uchar d;
  59   1        d = (~P3) & 0x0f;
  60   1        if(d == 0) return 0;
  61   1        Delay_SMG(100);
  62   1        d = (~P3) & 0x0f;
  63   1        if(d == 0) return 0;
  64   1        return d;
  65   1      }
  66          void Change_Keys()
  67          {
  68   1        switch(Scan_Keys())
  69   1        {
  70   2          case 8: GN = 1;break;//S$
  71   2          case 4: GN = 2;break;//S5
  72   2          case 2: GN = 3;break;//S6
  73   2          case 1: GN = 4;break;//S7
  74   2          case 0: GN = 0;break;
  75   2        }
  76   1      }
  77          //==========RB2模块========
  78          void Init_RB2()
  79          {
  80   1        IIC_Start();
  81   1        IIC_SendByte(0x90);
  82   1        IIC_WaitAck();
  83   1        IIC_SendByte(0x03);
  84   1        IIC_WaitAck();
  85   1        IIC_Stop();
  86   1      }
  87          
  88          unsigned char Read_RB2()
  89          {
  90   1        uchar d;
  91   1        IIC_Start();
  92   1        IIC_SendByte(0x91);
  93   1        IIC_WaitAck();
  94   1        d = IIC_RecByte();
  95   1        IIC_SendAck(1); 
  96   1        IIC_Stop();
  97   1        
  98   1        return d;
  99   1      }
 100          void f_Display()
 101          {
 102   1        if(dat_f < 10)
 103   1        {
 104   2          num8 = dat_f;
 105   2          num1=12;
 106   2          num2=num3=num4=num5=num6=num7=10;
 107   2        }
 108   1        else if((dat_f >= 10) && (dat_f < 100))
 109   1        {
 110   2          num7=dat_f/10;num8 = dat_f%10;
 111   2          num1=12;
 112   2          num2=num3=num4=num5=num6=10;
 113   2        }
 114   1        else if((dat_f >= 100) && (dat_f < 1000))
 115   1        {
 116   2          num6=dat_f/100;num7=dat_f/10%10;num8 = dat_f%10;
C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 3   

 117   2          num1=12;
 118   2          num2=num3=num4=num5=10;
 119   2        }
 120   1        else if((dat_f >= 1000) && (dat_f < 10000))
 121   1        {
 122   2          num5=dat_f/1000;num6=dat_f/100%10;num7=dat_f/10%10;num8 = dat_f%10;
 123   2          num1=12;
 124   2          num2=num3=num4=10;
 125   2        }
 126   1        else if(dat_f > 9999)
 127   1        {
 128   2          num4=dat_f/10000;num5=dat_f/1000%10;num6=dat_f/100%10;num7=dat_f/10%10;num8 = dat_f%10;
 129   2          num1=12;
 130   2          num2=num3=10;
 131   2        }
 132   1      }
 133            
 134          void Init_Timer()
 135          {
 136   1        TMOD=(TMOD&0xf0)|0x05;//T1定时，T0计数
 137   1        TMOD=(TMOD&0x0f)|0x10;
 138   1        TL0 = 0;
 139   1        TH0 = 0;
 140   1        
 141   1        TH1 = (65536 - 2000) / 256;
 142   1        TL1 = (65536 - 2000) % 256;
 143   1        
 144   1        EA = 1;
 145   1        ET1 = 1;
 146   1        TR1 = 1;
 147   1      }
 148          void Service_T1() interrupt 3
 149          {
 150   1        TH1 = (65536 - 2000) / 256;
 151   1        TL1 = (65536 - 2000) % 256;
 152   1        f_2ms = 1;
 153   1        Dispaly_SMG(num1,num2,num3,num4,num5,num6,num7,num8);
 154   1        
 155   1        
 156   1        
 157   1        if(++t_2ms == 250)
 158   1        {
 159   2          t_2ms = 0;
 160   2          flag = ~flag;
 161   2          if(flag == 0)
 162   2          {
 163   3            TL0 = 0;
 164   3            TH0 = 0;
 165   3            TR0 = 1;
 166   3          }
 167   2          else
 168   2          {
 169   3            TR0 = 0;
 170   3            dat_f = ((TH0 << 8) + TL0) * 2;
 171   3          }
 172   2        }
 173   1        
 174   1      } 
 175          
 176          //==========系统初始化=========
 177          void Init_Sys()
 178          {
C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 4   

 179   1        P2 = ((P2 & 0x1f) | 0x80);
 180   1        P0 = 0xff;
 181   1        P2 &= 0x1f;
 182   1        
 183   1        P2 = ((P2 & 0x1f) | 0xa0);
 184   1        P0 = 0x00;
 185   1        P2 &= 0x1f;
 186   1        
 187   1        P2 = ((P2 & 0x1f) | 0xc0);
 188   1        P0 = 0xff;
 189   1        P2 &= 0x1f;
 190   1        
 191   1        P2 = ((P2 & 0x1f) | 0xe0);
 192   1        P0 = 0xff;
 193   1        P2 &= 0x1f;
 194   1      }
 195          void main()
 196          {
 197   1        Init_Sys();
 198   1        Init_Timer();
 199   1        Init_RB2();
 200   1        while(1)
 201   1        {
 202   2          if(f_2ms == 1)
 203   2          {
 204   3            f_2ms = 0;
 205   3            
 206   3            Change_Keys();
 207   3            if(GN == 3)  //led显示开关
 208   3            {
 209   4              f_led = ~f_led;
 210   4              while(Scan_Keys());
 211   4            }
 212   3            if(GN == 4)  //数码管显示开关
 213   3            {
 214   4              f_smg = ~f_smg;
 215   4              while(Scan_Keys());
 216   4            }
 217   3            
 218   3            if(GN == 1) //数码管界面切换
 219   3            {
 220   4              f_S4 = ~f_S4;
 221   4              while(Scan_Keys());
 222   4            }
 223   3              if(f_S4 == 0)//电压测量界面
 224   3              {
 225   4                VRB2 = Read_RB2();
 226   4                if(f_VRB2 == 1)
 227   4                {
 228   5                  if(VRB2>250)
 229   5                    VRB2 = 250;
 230   5                  VDAC = VRB2*2;
 231   5                }
 232   4                else
 233   4                {
 234   5                  VDAC = 200;
 235   5                }
 236   4                if(f_led==1)
 237   4                {
 238   5                  P0 = 0xff;
 239   5                  P2 = ((P2 & 0x1f) | 0x80);
 240   5                  P0 = 0xff;//全灭
C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 5   

 241   5                  P2 &= 0x1f;
 242   5                  f_Display();
 243   5                }
 244   4                else
 245   4                {
 246   5                  P0 = 0xff;
 247   5                  P2 = ((P2 & 0x1f) | 0x80);
 248   5                  P0 = P0 & 0xfe;//Led1亮
 249   5                  P2 &= 0x1f;
 250   5                  if(f_VRB2 == 0)
 251   5                  {
 252   6                    P2 = ((P2 & 0x1f) | 0x80);
 253   6                    P0 = P0 & 0xef;//Led5亮
 254   6                    P2 &= 0x1f;
 255   6                  }
 256   5                  else
 257   5                  {
 258   6                    P2 = ((P2 & 0x1f) | 0x80);
 259   6                    P0 = P0 | 0x10;//Led5灭,同时不影响其他
 260   6                    P2 &= 0x1f;
 261   6                  }
 262   5                  if(VRB2<75)
 263   5                  {
 264   6                    P2 = ((P2 & 0x1f) | 0x80);
 265   6                    P0 = P0 | 0x04;//Led3灭,同时不影响其他
 266   6                    P2 &= 0x1f;
 267   6                  }
 268   5                  else if(VRB2>=75 && VRB2<125)
 269   5                  {
 270   6                    P2 = ((P2 & 0x1f) | 0x80);
 271   6                    P0 = P0 & 0xfb;//Led3亮
 272   6                    P2 &= 0x1f;
 273   6                  }
 274   5                  else if(VRB2>=125 && VRB2<175)
 275   5                  {
 276   6                    P2 = ((P2 & 0x1f) | 0x80);
 277   6                    P0 = P0 | 0x04;//Led3灭,同时不影响其他
 278   6                    P2 &= 0x1f;
 279   6                  }
 280   5                  else if(VRB2>=175 && VRB2<=255)
 281   5                  {
 282   6                    P2 = ((P2 & 0x1f) | 0x80);
 283   6                    P0 = P0 & 0xfb;//Led3亮
 284   6                    P2 &= 0x1f;
 285   6                  }
 286   5                }
 287   4                if(f_smg==0)
 288   4                {
 289   5                  num6=VDAC/100;num7=VDAC/10%10;
 290   5                  num8 = VDAC%10;
 291   5                  num1=13;
 292   5                  num2=num3=num4=num5=10;
 293   5                }
 294   4                else
 295   4                {
 296   5                  num1=num2=num3=num4=num5=num6=num7=num8=10;
 297   5                }
 298   4                
 299   4              }
 300   3              else         //频率测量界面
 301   3              {
 302   4                VRB2 = Read_RB2();
C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 6   

 303   4                if(f_VRB2 == 1)
 304   4                {
 305   5                  VDAC = VRB2;
 306   5                }
 307   4                else
 308   4                {
 309   5                  VDAC = 200;
 310   5                }
 311   4                if(f_led==1)
 312   4                {
 313   5                  P0 = 0xff;
 314   5                  P2 = ((P2 & 0x1f) | 0x80);
 315   5                  P0 = 0xff;//全灭
 316   5                  P2 &= 0x1f;
 317   5                  f_Display();
 318   5                }
 319   4                else
 320   4                {
 321   5                  P0 = 0xff;
 322   5                  P2 = ((P2 & 0x1f) | 0x80);
 323   5                  P0 = P0 & 0xfd;//Led2亮
 324   5                  P2 &= 0x1f;
 325   5                  if(dat_f < 1000)
 326   5                  {
 327   6                    P2 = ((P2 & 0x1f) | 0x80);
 328   6                    P0 = P0 | 0x08;//Led4灭,同时不影响其他
 329   6                    P2 &= 0x1f;
 330   6                  }
 331   5                  else if(dat_f < 5000 && dat_f >=1000)
 332   5                  {
 333   6                    P2 = ((P2 & 0x1f) | 0x80);
 334   6                    P0 = P0 & 0xf7;//Led4亮
 335   6                    P2 &= 0x1f;
 336   6                  }
 337   5                  else if(dat_f < 10000 && dat_f >=5000)
 338   5                  {
 339   6                    P2 = ((P2 & 0x1f) | 0x80);
 340   6                    P0 = P0 | 0x08;//Led4灭
 341   6                    P2 &= 0x1f;
 342   6                  }
 343   5                  else if(dat_f >=10000)
 344   5                  {
 345   6                    P2 = ((P2 & 0x1f) | 0x80);
 346   6                    P0 = P0 & 0xf7;//Led4亮
 347   6                    P2 &= 0x1f;
 348   6                  }
 349   5                  
 350   5                  
 351   5                }
 352   4                if(f_smg==0)
 353   4                {
 354   5                  f_Display();
 355   5                }
 356   4                else
 357   4                {
 358   5                  num1=num2=num3=num4=num5=num6=num7=num8=10;
 359   5                }
 360   4              }
 361   3            
 362   3            if(GN == 2)  //RB2输出值改变
 363   3            {
 364   4              f_VRB2=~f_VRB2;
C51 COMPILER V9.59.0.0   20214140                                                          03/22/2023 11:18:44 PAGE 7   

 365   4              while(Scan_Keys());
 366   4            }
 367   3          }
 368   2        }
 369   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1541    ----
   CONSTANT SIZE    =     31    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.59.0.0   __________________                                                03/10/2023 21:58:31 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE __________________
OBJECT MODULE PLACED IN .\Objects\智能照明自动控制器.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE 智能照明自动控制器.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.
                    -\Listings\智能照明自动控制器.lst) TABS(2) OBJECT(.\Objects\智能照明自动控制器.obj)

line level    source

   1          #include "reg52.h"
   2          #include "iic.h"
   3          
   4          sbit S4 = P3^3;
   5          sbit S5 = P3^2;
   6          
   7          unsigned char code SMG_NUM[10] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
   8          unsigned char code SMG_NUM1[10] = {0x40,0x79,0x34,0x30,0x19,0x12,0x02,0x78,0x00,0x10};
   9          
  10          unsigned char dat_rd1;
  11          unsigned char bac_rd1;
  12          unsigned char n,n1;
  13          float read_v;
  14          unsigned int smg_v;
  15          
  16          //=============数码管显示函数=================
  17          void Delay_SMG(unsigned int t)
  18          {
  19   1        while(t--);
  20   1      }
  21          
  22          void Display_SMG_Bit(unsigned char pos,unsigned char value)
  23          {
  24   1        P2 = (P2 & 0x1f) | 0xc0;
  25   1        P0 = 0x01 << pos;
  26   1        P2 &= 0x1f;
  27   1      
  28   1        P2 = (P2 & 0x1f) | 0xe0;
  29   1        P0 = value;
  30   1        P2 &= 0x1f;
  31   1      }
  32          
  33          void Display_SMG()
  34          {
  35   1        Display_SMG_Bit(0,0xbf);
  36   1        Delay_SMG(500);
  37   1        
  38   1        Display_SMG_Bit(1,SMG_NUM[n]);
  39   1        Delay_SMG(500);
  40   1        
  41   1        Display_SMG_Bit(2,0xbf);
  42   1        Delay_SMG(500);
  43   1        
  44   1        Display_SMG_Bit(5,SMG_NUM[dat_rd1 / 100]);
  45   1        Delay_SMG(500);
  46   1        Display_SMG_Bit(6,SMG_NUM[(dat_rd1 % 100) / 10]);
  47   1        Delay_SMG(500);
  48   1        Display_SMG_Bit(7,SMG_NUM[dat_rd1 % 10]);
  49   1        Delay_SMG(500);
  50   1        
  51   1        
  52   1        P2 = (P2 & 0x1f) | 0xc0;
  53   1        P0 = 0xff;
  54   1        P2 &= 0x1f;
C51 COMPILER V9.59.0.0   __________________                                                03/10/2023 21:58:31 PAGE 2   

  55   1      
  56   1        P2 = (P2 & 0x1f) | 0xe0;
  57   1        P0 = 0xff;
  58   1        P2 &= 0x1f;
  59   1      }
  60          
  61          void Display_SMG_Old()
  62          {
  63   1        Display_SMG_Bit(0,0xbf);
  64   1        Delay_SMG(500);
  65   1        
  66   1        Display_SMG_Bit(1,SMG_NUM[n1]);
  67   1        Delay_SMG(500);
  68   1        
  69   1        Display_SMG_Bit(2,0xbf);
  70   1        Delay_SMG(500);
  71   1        
  72   1        Display_SMG_Bit(5,SMG_NUM[bac_rd1 / 100]);
  73   1        Delay_SMG(500);
  74   1        Display_SMG_Bit(6,SMG_NUM[(bac_rd1 % 100) / 10]);
  75   1        Delay_SMG(500);
  76   1        Display_SMG_Bit(7,SMG_NUM[bac_rd1 % 10]);
  77   1        Delay_SMG(500);
  78   1        
  79   1        
  80   1        P2 = (P2 & 0x1f) | 0xc0;
  81   1        P0 = 0xff;
  82   1        P2 &= 0x1f;
  83   1      
  84   1        P2 = (P2 & 0x1f) | 0xe0;
  85   1        P0 = 0xff;
  86   1        P2 &= 0x1f;
  87   1      }
  88          //==================PCF8951部分==============
  89          void Read_Rd1()
  90          {
  91   1        IIC_Start(); 
  92   1        IIC_SendByte(0x90);
  93   1        IIC_WaitAck();
  94   1        IIC_SendByte(0x01);
  95   1        IIC_WaitAck();
  96   1        IIC_Stop();
  97   1        
  98   1        Display_SMG();
  99   1        
 100   1        IIC_Start(); 
 101   1        IIC_SendByte(0x91);
 102   1        IIC_WaitAck();
 103   1        dat_rd1 = IIC_RecByte();
 104   1        IIC_SendAck(1);
 105   1        IIC_Stop();
 106   1        Display_SMG();
 107   1      }
 108          //===================存储器24C02===============
 109          unsigned char Read_24C02(unsigned char addr)
 110          {
 111   1        unsigned char tmp;
 112   1        IIC_Start(); 
 113   1        IIC_SendByte(0xa0);
 114   1        IIC_WaitAck();
 115   1        IIC_SendByte(addr);
 116   1        IIC_WaitAck();
C51 COMPILER V9.59.0.0   __________________                                                03/10/2023 21:58:31 PAGE 3   

 117   1        IIC_Stop();
 118   1        
 119   1        IIC_Start(); 
 120   1        IIC_SendByte(0xa1);
 121   1        IIC_WaitAck();
 122   1        tmp = IIC_RecByte();
 123   1        IIC_SendAck(1);
 124   1        IIC_Stop();
 125   1        return tmp;
 126   1      }
 127          
 128          void write_24C02(unsigned char addr,unsigned char dat)
 129          {
 130   1        IIC_Start(); 
 131   1        IIC_SendByte(0xa0);
 132   1        IIC_WaitAck();
 133   1        IIC_SendByte(addr);
 134   1        IIC_WaitAck();
 135   1        IIC_SendByte(dat);
 136   1        IIC_SendAck(1);
 137   1        IIC_Stop();
 138   1      }
 139          //==============LED按键控制函数===============
 140          void Led_Contral()
 141          {
 142   1        read_v = dat_rd1*(5/255);
 143   1        smg_v = read_v*100;
 144   1        if( dat_rd1 > 200)
 145   1        {
 146   2          P2 = (P2 & 0x1f) | 0x80;
 147   2          P0 = 0xfe << 0;
 148   2          P2 &= 0x1f;
 149   2          n = 1;
 150   2        }
 151   1        else if( dat_rd1 > 150)
 152   1        {
 153   2          P2 = (P2 & 0x1f) | 0x80;
 154   2          P0 = 0xfe << 1;
 155   2          P2 &= 0x1f;
 156   2          n = 2;
 157   2        }
 158   1        else if(dat_rd1 > 100)
 159   1        {
 160   2          P2 = (P2 & 0x1f) | 0x80;
 161   2          P0 = 0xfe << 3;
 162   2          P2 &= 0x1f;
 163   2          n = 3;
 164   2        }
 165   1        else if( dat_rd1 > 50)
 166   1        {
 167   2          P2 = (P2 & 0x1f) | 0x80;
 168   2          P0 = 0xfe << 5;
 169   2          P2 &= 0x1f;
 170   2          n = 4;
 171   2        }
 172   1        else
 173   1        {
 174   2          P2 = (P2 & 0x1f) | 0x80;
 175   2          P0 = 0xfe << 7;
 176   2          P2 &= 0x1f;
 177   2          n = 5;
 178   2        }
C51 COMPILER V9.59.0.0   __________________                                                03/10/2023 21:58:31 PAGE 4   

 179   1      }
 180          
 181          //==============按键扫描函数=================
 182          void Scan_Keys()
 183          {
 184   1        if(S4 == 0)
 185   1        {
 186   2          Delay_SMG(100);
 187   2          if(S4 == 0)
 188   2          {
 189   3            write_24C02(0x01,n);
 190   3            Delay_SMG(1000);
 191   3            write_24C02(0x02,dat_rd1);
 192   3            while(S4 == 0)
 193   3            {
 194   4              Display_SMG();
 195   4            }
 196   3            
 197   3          }
 198   2        }
 199   1        if(S5 == 0)
 200   1        {
 201   2          Delay_SMG(100);
 202   2          if(S5 == 0)
 203   2          {
 204   3            while(S5 == 0)
 205   3            {
 206   4              n1 = Read_24C02(0x01);
 207   4              bac_rd1 = Read_24C02(0x02);
 208   4              Display_SMG_Old();
 209   4            }
 210   3          }
 211   2        }
 212   1      }
 213          
 214          //==============系统初始化函数================
 215          void Init_Sys()
 216          {
 217   1        P2 = (P2 & 0x1f) | 0x80;
 218   1        P0 = 0xff;
 219   1        P2 &= 0x1f;
 220   1      
 221   1        P2 = (P2 & 0x1f) | 0xa0;
 222   1        P0 = 0x00;
 223   1        P2 &= 0x1f;
 224   1      }
 225          void main()
 226          {
 227   1        Init_Sys();
 228   1        while(1)
 229   1        {
 230   2          Read_Rd1();
 231   2          Led_Contral();
 232   2          Scan_Keys();
 233   2        }
 234   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    670    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   __________________                                                03/10/2023 21:58:31 PAGE 5   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

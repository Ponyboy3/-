C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2024 21:00:47 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          
   4          #define uchar unsigned char
   5          #define uint unsigned int
   6          
   7          sbit TX = P1 ^ 0;
   8          sbit RX = P1 ^ 1;
   9          
  10          uchar code type1[] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xf8, 0x80, 0x90, 0xff, 0xc6};
  11          uchar code type2[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
  12          
  13          uchar num1, num2, num3, num4, num5, num6, num7, num8;
  14          bit f_2ms;
  15          uint distance;
  16          void Display_SMG(uchar n1, uchar n2, uchar n3, uchar n4, uchar n5, uchar n6, uchar n7, uchar n8)
  17          {
  18   1              char i;
  19   1              P0 = 0xff;
  20   1              P2 = (P2 & 0x1f) | 0xc0;
  21   1              P0 = type2[i];
  22   1              P2 &= 0x1f;
  23   1              switch (i)
  24   1              {
  25   2              case 0:
  26   2                      P2 = (P2 & 0x1f) | 0xe0;
  27   2                      P0 = type1[n1];
  28   2                      P2 &= 0x1f;
  29   2                      break;
  30   2              case 1:
  31   2                      P2 = (P2 & 0x1f) | 0xe0;
  32   2                      P0 = type1[n2];
  33   2                      P2 &= 0x1f;
  34   2                      break;
  35   2              case 2:
  36   2                      P2 = (P2 & 0x1f) | 0xe0;
  37   2                      P0 = type1[n3];
  38   2                      P2 &= 0x1f;
  39   2                      break;
  40   2              case 3:
  41   2                      P2 = (P2 & 0x1f) | 0xe0;
  42   2                      P0 = type1[n4];
  43   2                      P2 &= 0x1f;
  44   2                      break;
  45   2              case 4:
  46   2                      P2 = (P2 & 0x1f) | 0xe0;
  47   2                      P0 = type1[n5];
  48   2                      P2 &= 0x1f;
  49   2                      break;
  50   2              case 5:
  51   2                      P2 = (P2 & 0x1f) | 0xe0;
  52   2                      P0 = type1[n6];
  53   2                      P2 &= 0x1f;
  54   2                      break;
C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2024 21:00:47 PAGE 2   

  55   2              case 6:
  56   2                      P2 = (P2 & 0x1f) | 0xe0;
  57   2                      P0 = type1[n7];
  58   2                      P2 &= 0x1f;
  59   2                      break;
  60   2              case 7:
  61   2                      P2 = (P2 & 0x1f) | 0xe0;
  62   2                      P0 = type1[n8];
  63   2                      P2 &= 0x1f;
  64   2                      break;
  65   2              }
  66   1              if (++i == 8)
  67   1                      i = 0;
  68   1      }
  69          void Init_T0()
  70          {
  71   1              TMOD = (TMOD & 0xf0) | 0x01;
  72   1              TH0 = (65536 - 12) / 256;
  73   1              TL0 = (65536 - 12) % 256;
  74   1      }
  75          void Init_T1()
  76          {
  77   1              TMOD = (TMOD & 0x0f) | 0x10;
  78   1              TH1 = (65536 - 2000) / 256;
  79   1              TL1 = (65536 - 2000) % 256;
  80   1      
  81   1              EA = 1;
  82   1              ET1 = 1;
  83   1              TR1 = 1;
  84   1      }
  85          // 超声波模块
  86          uchar Get_Distance()
  87          {
  88   1              uchar temp = 16;
  89   1              TX = 0;
  90   1              TR0 = 1;
  91   1              // 引脚发送40Khz方波信号
  92   1              while (temp--) // 每隔12us发8个方波
  93   1              {
  94   2                      while (!TF0)
  95   2                              ;
  96   2                      TX ^= 1; // if(TX==1) { Delay20us();}//可以不用
  97   2                      TH0 = (65536 - 12) / 256;
  98   2                      TL0 = (65536 - 12) % 256;
  99   2                      TF0 = 0;
 100   2              }
 101   1              //      while(temp--)
 102   1              //      {
 103   1              //              while(!TF0);
 104   1              //              TX ^= 1;//TX = ~TX;
 105   1              //              TH0=(65536-12)/256;
 106   1              //              TL0=(65536-12)%256;
 107   1              //              TF0 = 0;//TF0必须要先赋值(益处中断，自动置1)在清零
 108   1              //      }
 109   1              TR0 = 0;
 110   1              TL0 = 0;
 111   1              TH0 = 0;
 112   1              TR0 = 1;
 113   1              while (RX && !TF0)
 114   1                      ;
 115   1              TR0 = 0;
 116   1      
C51 COMPILER V9.60.7.0   MAIN                                                              04/08/2024 21:00:47 PAGE 3   

 117   1              if (TF0 == 1)
 118   1              {
 119   2                      TF0 = 0;
 120   2                      return 999;
 121   2              }
 122   1              else
 123   1                      return ((TH0 << 8) + TL0) * 0.017;
 124   1      }
 125          void Init_Sys()
 126          {
 127   1              P2 = (P2 & 0x1f) | 0x80;
 128   1              P0 = 0xff;
 129   1              P2 &= 0x1f;
 130   1              P2 = (P2 & 0x1f) | 0xa0;
 131   1              P0 = 0x00;
 132   1              P2 &= 0x1f;
 133   1              P2 = (P2 & 0x1f) | 0xc0;
 134   1              P0 = 0xff;
 135   1              P2 &= 0x1f;
 136   1              P2 = (P2 & 0x1f) | 0xe0;
 137   1              P0 = 0xff;
 138   1              P2 &= 0x1f;
 139   1      }
 140          void main()
 141          {
 142   1              Init_Sys();
 143   1              Init_T1();
 144   1              Init_T0();
 145   1              while (1)
 146   1              {
 147   2                      if (f_2ms == 1)
 148   2                      {
 149   3                              f_2ms = 0;
 150   3                              distance = Get_Distance();
 151   3                              num1 = num2 = num3 = num4 = 10;
 152   3                              num5 = distance / 100;
 153   3                              num6 = distance / 10 % 10;
 154   3                              num7 = distance % 10;
 155   3                              num8 = 11;
 156   3                      }
 157   2              }
 158   1      }
 159          void Service_T1() interrupt 3
 160          {
 161   1              TH1 = (65536 - 2000) / 256;
 162   1              TL1 = (65536 - 2000) % 256;
 163   1      
 164   1              f_2ms = 1;
 165   1              Display_SMG(num1, num2, num3, num4, num5, num6, num7, num8);
 166   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

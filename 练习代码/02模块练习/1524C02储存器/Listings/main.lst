C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2024 00:42:32 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          #include "ds1302.h"  
   3          #include "iic.h"
   4          
   5          #define uchar unsigned char
   6          #define uint unsigned int
   7          
   8          uchar code type1[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf};
   9          uchar code type2[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  10          
  11          uchar num1,num2,num3,num4,num5,num6,num7,num8;
  12          bit f_2ms;
  13          uchar GN;
  14          uchar h,m,s;
  15          //unsigned char dat1 = 0,dat2 = 0,dat3 = 0;  // 24c02Êý¾Ý
  16          
  17          void Display_Smg(uchar n1,uchar n2,uchar n3,uchar n4,uchar n5,uchar n6,uchar n7,uchar n8)
  18          {
  19   1              uchar i;
  20   1              P0 = 0xff;
  21   1              P2 = (P2 & 0x1f) | 0xc0;
  22   1              P0 = type2[i];
  23   1              P2 &= 0x1f;
  24   1              switch(i)
  25   1              {
  26   2                      case 0:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n1];P2 &= 0x1f;break;
  27   2                      case 1:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n2];P2 &= 0x1f;break;
  28   2                      case 2:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n3];P2 &= 0x1f;break;
  29   2                      case 3:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n4];P2 &= 0x1f;break;
  30   2                      case 4:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n5];P2 &= 0x1f;break;
  31   2                      case 5:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n6];P2 &= 0x1f;break;
  32   2                      case 6:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n7];P2 &= 0x1f;break;
  33   2                      case 7:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n8];P2 &= 0x1f;break;
  34   2              }
  35   1              if(++i==8)
  36   1                      i=0;
  37   1      }
  38          void Delay_Keys(uint t)
  39          {
  40   1              while(t--);
  41   1      }
  42          uchar Scan_Keys()
  43          {
  44   1              uchar d;
  45   1              d = (~P3)&0x0f;
  46   1              if(d == 0) return 0;
  47   1              Delay_Keys(100);
  48   1              if(d == 0) return 0;
  49   1              return d;
  50   1      }
  51          void Change_Keys()
  52          {
  53   1              switch(Scan_Keys())
  54   1              {
C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2024 00:42:32 PAGE 2   

  55   2                      case 8:GN = 1;break;//S4
  56   2                      case 4:GN = 2;break;
  57   2                      case 2:GN = 3;break;
  58   2                      case 1:GN = 4;break;//S7
  59   2                      case 0:GN = 0;break;
  60   2              }
  61   1      }
  62          
  63          void Init_DS1302()
  64          {
  65   1              Write_Ds1302_Byte(0x80,h);
  66   1              Write_Ds1302_Byte(0x82,m);
  67   1              Write_Ds1302_Byte(0x84,s);
  68   1      }
  69          void Du_DS1302()
  70          {
  71   1              h = Read_Ds1302_Byte( 0x85 );
  72   1              m = Read_Ds1302_Byte( 0x83 );
  73   1              s = Read_Ds1302_Byte( 0x81 );
  74   1      }
  75          
  76          uchar Du_24c02(uchar addr)
  77          {
  78   1              uchar d;
  79   1              IIC_Start();
  80   1              IIC_SendByte(0xa0);
  81   1              IIC_WaitAck();
  82   1              IIC_SendByte(addr);
  83   1              IIC_WaitAck();
  84   1              IIC_Stop(); 
  85   1              
  86   1              IIC_Start();
  87   1              IIC_SendByte(0xa1);
  88   1              IIC_WaitAck();
  89   1              d = IIC_RecByte();
  90   1              IIC_SendAck(1);
  91   1              IIC_Stop();
  92   1              return d;
  93   1      }
  94          void Xie_24c02(uchar addr,uchar dat)
  95          {
  96   1              IIC_Start();
  97   1              IIC_SendByte(0xa0);
  98   1              IIC_WaitAck();
  99   1              IIC_SendByte(addr);
 100   1              IIC_WaitAck();
 101   1              IIC_SendByte(dat);
 102   1              IIC_WaitAck();
 103   1              IIC_Stop(); 
 104   1      }
 105          void Init_T1()
 106          {
 107   1              TMOD = (TMOD & 0x0f) | 0x10;
 108   1              TH1 = (65536 - 2000) / 256;
 109   1              TL1 = (65536 - 2000) % 256;
 110   1              
 111   1              EA = 1;
 112   1              ET1 = 1;
 113   1              TR1 = 1;
 114   1      }
 115          void Init_Sys()
 116          {
C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2024 00:42:32 PAGE 3   

 117   1              P2 = (P2 & 0x1f) | 0x80;
 118   1              P0 = 0xff;
 119   1              P2 &= 0x1f;
 120   1              P2 = (P2 & 0x1f) | 0xa0;
 121   1              P0 = 0x00;
 122   1              P2 &= 0x1f;
 123   1              P2 = (P2 & 0x1f) | 0xc0;
 124   1              P0 = 0xff;
 125   1              P2 &= 0x1f;
 126   1              P2 = (P2 & 0x1f) | 0xe0;
 127   1              P0 = 0xff;
 128   1              P2 &= 0x1f;
 129   1      }
 130          void main()
 131          {
 132   1              Init_Sys();
 133   1              Init_T1();
 134   1              Init_DS1302();
 135   1              Xie_24c02(0x01,23);
 136   1              Xie_24c02(0x03,59);
 137   1              Xie_24c02(0x05,50);
 138   1              
 139   1              h = Du_24c02(0x01);
 140   1              m = Du_24c02(0x03);
 141   1              s = Du_24c02(0x05);
 142   1              while(1)
 143   1              {
 144   2                      if(f_2ms == 1)
 145   2                      {
 146   3                              f_2ms = 0;
 147   3                              Change_Keys();
 148   3                              if(GN == 1)
 149   3                              {
 150   4                                      Xie_24c02(0x01,h);
 151   4                                      Xie_24c02(0x03,m);
 152   4                                      Xie_24c02(0x05,s);
 153   4                                      while(Scan_Keys());
 154   4                              }
 155   3                              Du_DS1302();
 156   3                              num1=h/16;num2=h%16;num3=11;num4=m/16;num5=m%16;num6=11;num7=s/16;num8=s%16;
 157   3                      }
 158   2              }
 159   1      }
 160          void Service_T1() interrupt 3
 161          {
 162   1              TH1 = (65536 - 2000) / 256;
 163   1              TL1 = (65536 - 2000) % 256;
 164   1              
 165   1              f_2ms = 1;
 166   1              Display_Smg(num1,num2,num3,num4,num5,num6,num7,num8);
 167   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    665    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              04/07/2024 00:42:32 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

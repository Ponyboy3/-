C51 COMPILER V9.55   MIAN                                                                  05/03/2022 16:10:41 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN .\Objects\mian.obj
COMPILER INVOKED BY: D:\keilc\pack_file\C51\BIN\C51.EXE mian.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\mian.lst) TABS(2) OBJECT(.\Objects\mian.obj)

line level    source

   1          /****************************************
   2          读电位器的电压值用数码管显示
   3          *********************************************/
   4          #include <STC15F2K60S2.H>
   5          #include "iic.h"
   6          #include <intrins.h>
   7          #define uchar unsigned char 
   8          #define uint unsigned int 
   9            
  10          
  11          uchar code type1[]={  0xC0,
  12                                0xF9,
  13                                0xA4,
  14                                0xB0,
  15                                0x99,
  16                                0x92,
  17                                0x82,
  18                                0xF8,
  19                                0x80,
  20                                0x90,0xff};
  21          uchar code type2[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  22          uchar num1,num2,num3,num4,num5,num6,num7,num8;
  23          uchar f_2ms;
  24          uint t_2ms,tt_2ms;
  25          
  26          uint temp;
  27          uchar vary=255;
  28          
  29          void smg_display(char n1,char n2,char n3,char n4,char n5,char n6,char n7,char n8)
  30          {
  31   1        char i;
  32   1        P0=0xff;
  33   1        P2=(P2&0x1f)|0xc0;
  34   1        P0=type2[i];
  35   1        P2=(P2&0x1f);
  36   1        switch(i)
  37   1        {
  38   2          case 0:P2=(P2&0x1f)|0xe0; P0=type1[n1]; P2=(P2&0x1f);break;
  39   2          case 1:P2=(P2&0x1f)|0xe0; P0=type1[n2]; P2=(P2&0x1f);break;   
  40   2          case 2:P2=(P2&0x1f)|0xe0; P0=type1[n3]; P2=(P2&0x1f);break;   
  41   2          case 3:P2=(P2&0x1f)|0xe0; P0=type1[n4]; P2=(P2&0x1f);break;   
  42   2          case 4:P2=(P2&0x1f)|0xe0; P0=type1[n5]; P2=(P2&0x1f);break;   
  43   2          case 5:P2=(P2&0x1f)|0xe0; P0=type1[n6]; P2=(P2&0x1f);break;   
  44   2          case 6:P2=(P2&0x1f)|0xe0; P0=type1[n7]; P2=(P2&0x1f);break;   
  45   2          case 7:P2=(P2&0x1f)|0xe0; P0=type1[n8]; P2=(P2&0x1f);break;   
  46   2          
  47   2        }
  48   1        if(++i==8)
  49   1          i=0;
  50   1      }
  51          ///////////////////////////pcf8591
  52          void initial_adc(uchar addr)
  53          {
  54   1        IIC_Start( );   
C51 COMPILER V9.55   MIAN                                                                  05/03/2022 16:10:41 PAGE 2   

  55   1        IIC_SendByte( 0x90+0 );
  56   1        IIC_WaitAck( );
  57   1        IIC_SendByte( addr );
  58   1        IIC_WaitAck( );
  59   1        IIC_Stop( );
  60   1      }
  61          
  62          
  63          uint du_adc()
  64          {
  65   1        uint D;
  66   1        IIC_Start( );   
  67   1        IIC_SendByte( 0x90+1 );
  68   1        IIC_WaitAck( );
  69   1        D=IIC_RecByte( );
  70   1        IIC_SendAck(1);
  71   1        IIC_Stop( );
  72   1        D=(D*500.0)/255;
  73   1        return D;
  74   1      }
  75          
  76          void xie_dac(uchar dat)
  77          {
  78   1        IIC_Start( ); 
  79   1        IIC_SendByte( 0x90+0 );
  80   1        IIC_WaitAck( );
  81   1        IIC_SendByte( 0x40 );
  82   1        IIC_WaitAck( ); 
  83   1        IIC_SendByte( dat );
  84   1        IIC_WaitAck( ); 
  85   1        IIC_Stop( );
  86   1      }
  87          
  88          
  89          void time1_int1()
  90          {
  91   1        EA=1;
  92   1        ET1=1;
  93   1        TR1=1;
  94   1        TMOD=(TMOD&0x0f)|0x10;
  95   1        TH1=(65536-2000)/256;
  96   1        TL1=(65536-2000)%256;   
  97   1      }
  98          
  99          
 100          void initial_all()
 101          {
 102   1        P2=(P2&0x1f)|0xa0;
 103   1        P0=0x00;
 104   1        P2=(P2&0x1f); 
 105   1        P2=(P2&0x1f)|0x80;
 106   1        P0=0xff;
 107   1        P2=(P2&0x1f); 
 108   1        P2=(P2&0x1f)|0xc0;
 109   1        P0=0xff;
 110   1        P2=(P2&0x1f);   
 111   1        P2=(P2&0x1f)|0xe0;
 112   1        P0=0xff;
 113   1        P2=(P2&0x1f);   
 114   1      }
 115          
 116          void main()
C51 COMPILER V9.55   MIAN                                                                  05/03/2022 16:10:41 PAGE 3   

 117          {
 118   1        initial_all();  
 119   1        time1_int1();
 120   1        initial_adc(0x0);
 121   1        while(1)
 122   1        {
 123   2         if(f_2ms==1)
 124   2         {
 125   3           f_2ms=0;
 126   3           
 127   3           
 128   3        if(++tt_2ms==500)
 129   3        {
 130   4          tt_2ms=0;
 131   4      
 132   4          xie_dac(vary--);
 133   4        }    
 134   3        
 135   3      //     if(++t_2ms==100)
 136   3      //     {
 137   3      //       t_2ms=0;
 138   3      //       initial_adc(0x0);
 139   3             temp=du_adc();
 140   3      //       
 141   3      //     }
 142   3           
 143   3           num1=temp/100;num2=temp%100/10;num3=temp%10;
 144   3           num4=num5=num6=num7=num8=10;
 145   3        
 146   3        
 147   3         }
 148   2        }
 149   1      }
 150          
 151          
 152          
 153          void cl_time1_int1() interrupt 3
 154          {
 155   1        TH1=(65536-2000)/256;
 156   1        TL1=(65536-2000)%256;   
 157   1        
 158   1        smg_display(num1,num2,num3,num4,num5,num6,num7,num8);
 159   1        f_2ms=1;
 160   1        
 161   1        
 162   1      
 163   1        
 164   1        
 165   1      }
 166          
 167          
 168          
 169          
 170          
 171          
 172          
 173          
 174          
 175          
 176          


C51 COMPILER V9.55   MIAN                                                                  05/03/2022 16:10:41 PAGE 4   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    595    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

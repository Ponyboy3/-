C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          
   3          #define uchar unsigned char 
   4          #define uint unsigned int
   5          
   6          // 数码管显示数据， 一般前10个为0-9， 可更具需要往里面添加
   7          uchar code type1[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf,0x8e,0xc8,0xc1};
   8          // xxx
   9          uchar code type2[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  10          
  11          uchar num1,num2,num3,num4,num5,num6,num7,num8;  // 数码管每一位（例如 num1 = 2, 第一个数码管显示 2）
  12          uchar GN;  // 按键标志位
  13          bit f_2ms;  // 2ms标志位
  14          uchar temp_Led_P0 = 0xff;  // 用来存上一次LED状态
  15          
  16          sbit S7 = P3^0;
  17          sbit S6 = P3^1;
  18          sbit S5 = P3^2;
  19          sbit S4 = P3^3;
  20          
  21          sbit L1 = P0^0;
  22          sbit L2 = P0^1;
  23          sbit L3 = P0^2;
  24          sbit L4 = P0^3;
  25          sbit L5 = P0^4;
  26          sbit L6 = P0^5;
  27          
  28          // =========================================== 代码开始 ======================================
  29          bit f_1s;  // 1s标志位
  30          
  31          uint num_2ms = 0, num_s = 0;  // 多少个2ms, 1s
  32          
  33          unsigned int s9_press_time = 0;
  34          bit s9_long;
  35          // =========================================== 代码结束 ======================================
  36          
  37          
  38          //=========================================普通延时函数(模板函数)=================================
  39          void Delay(uint t) {
  40   1              while( t -- );
  41   1              while( t -- );
  42   1      }
  43          //=======================================单个LED控制函数(模板函数)================================
  44          // ======================LED1====================
  45          void LED1_On() {
  46   1              P0 = 0xff & temp_Led_P0;  // 清除其他地方对P0的值（特别是数码管一直在刷新），并且结合LED前一次的状态
  47   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  48   1              L1 = 0;  // 要将P0放在这两句代码之间，避免错乱
  49   1              temp_Led_P0 = P0;
  50   1              P2 &= 0x1f;
  51   1      }
  52          void LED1_Off() {
  53   1              P0 = 0xff & temp_Led_P0;
  54   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 2   

  55   1              L1 = 1;  // 要将P0放在这两句代码之间，避免错乱
  56   1              temp_Led_P0 = P0;
  57   1              P2 &= 0x1f;
  58   1      }
  59          // ======================LED2====================
  60          void LED2_On() {
  61   1              P0 = 0xff & temp_Led_P0;
  62   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  63   1              L2 = 0;  // 要将P0放在这两句代码之间，避免错乱
  64   1              temp_Led_P0 = P0;
  65   1              P2 &= 0x1f;
  66   1      }
  67          void LED2_Off() {
  68   1              P0 = 0xff & temp_Led_P0;
  69   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  70   1              L2 = 1;  // 要将P0放在这两句代码之间，避免错乱
  71   1              temp_Led_P0 = P0;
  72   1              P2 &= 0x1f;
  73   1      }
  74          // ======================LED3====================
  75          void LED3_On() {
  76   1              P0 = 0xff & temp_Led_P0;
  77   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  78   1              L3 = 0;  // 要将P0放在这两句代码之间，避免错乱
  79   1              temp_Led_P0 = P0;
  80   1              P2 &= 0x1f;
  81   1      }
  82          void LED3_Off() {
  83   1              P0 = 0xff & temp_Led_P0;
  84   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  85   1              L3 = 1;  // 要将P0放在这两句代码之间，避免错乱
  86   1              temp_Led_P0 = P0;
  87   1              P2 &= 0x1f;
  88   1      }
  89          // ======================LED4====================
  90          void LED4_On() {
  91   1              P0 = 0xff & temp_Led_P0;
  92   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  93   1              L4 = 0;  // 要将P0放在这两句代码之间，避免错乱
  94   1              temp_Led_P0 = P0;
  95   1              P2 &= 0x1f;
  96   1      }
  97          void LED4_Off() {
  98   1              P0 = 0xff & temp_Led_P0 & temp_Led_P0;
  99   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 100   1              L4 = 1;  // 要将P0放在这两句代码之间，避免错乱
 101   1              temp_Led_P0 = P0;
 102   1              P2 &= 0x1f;
 103   1      }
 104          // ======================LED5====================
 105          void LED5_On() {
 106   1              P0 = 0xff & temp_Led_P0;
 107   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 108   1              L5 = 0;  // 要将P0放在这两句代码之间，避免错乱
 109   1              temp_Led_P0 = P0;
 110   1              P2 &= 0x1f;
 111   1      }
 112          void LED5_Off() {
 113   1              P0 = 0xff & temp_Led_P0;
 114   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 115   1              L5 = 1;  // 要将P0放在这两句代码之间，避免错乱
 116   1              temp_Led_P0 = P0;
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 3   

 117   1              P2 &= 0x1f;
 118   1      }
 119          // ======================LED6====================
 120          void LED6_On() {
 121   1              P0 = 0xff & temp_Led_P0;
 122   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 123   1              L6 = 0;  // 要将P0放在这两句代码之间，避免错乱
 124   1              temp_Led_P0 = P0;
 125   1              P2 &= 0x1f;
 126   1      }
 127          void LED6_Off() {
 128   1              P0 = 0xff & temp_Led_P0;
 129   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 130   1              L6 = 1;  // 要将P0放在这两句代码之间，避免错乱
 131   1              temp_Led_P0 = P0;
 132   1              P2 &= 0x1f;
 133   1      }
 134          
 135          void LED_On(uchar n) {
 136   1              P0 = 0xff & temp_Led_P0;
 137   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 138   1              L6 = 0;  // 要将P0放在这两句代码之间，避免错乱
 139   1              temp_Led_P0 = P0;
 140   1              P2 &= 0x1f;
 141   1      }
*** WARNING C280 IN LINE 135 OF main.c: 'n': unreferenced local variable
 142          //=========================================数码管显示==============================================
 143          void Display_SMG(uchar n1,uchar n2,uchar n3,uchar n4,uchar n5,uchar n6,uchar n7,uchar n8)
 144          {
 145   1              char i;
 146   1              P0 = 0xff;
 147   1              P2 = (P2 & 0x1f) | 0xc0;//数码管位选
 148   1              P0 = type2[i];
 149   1              P2 &= 0x1f;
 150   1              switch(i)//数码管位选
 151   1              {
 152   2                      case 0:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n1];P2 &= 0x1f;break;
 153   2                      case 1:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n2];P2 &= 0x1f;break;
 154   2                      case 2:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n3];P2 &= 0x1f;break;
 155   2                      case 3:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n4];P2 &= 0x1f;break;
 156   2                      case 4:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n5];P2 &= 0x1f;break;
 157   2                      case 5:P2 = (P2 & 0x1f) | 0xe0;
 158   2                                                                              if(0)  // 根据需要的条件
 159   2                                                                              {
 160   3                                                                                      P0 = type1[n6]&0x7f;  // 加入小数点
 161   3                                                                              }
 162   2                                                                              else
 163   2                                                                                      P0 = type1[n6];
 164   2                                                                                                        P2 &= 0x1f;break;
 165   2                      case 6:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n7];P2 &= 0x1f;break;
 166   2                      case 7:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n8];P2 &= 0x1f;break;
 167   2              }
 168   1              if(++i==8)
 169   1                      i = 0;
 170   1      }
 171          //============================================独立按键============================================
 172          /***************************************************
 173          写法一：
 174          有按键被按下，GN标记，后面根据需要功能进行操作
 175          ***************************************************/
 176          void Delay_Keys(uint t)
 177          {
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 4   

 178   1              while(t--);
 179   1      }
 180          uchar Scan_Keys_Alone()
 181          {
 182   1              char d;
 183   1              d = (~P3) & 0x0f;
 184   1              if(d == 0) return 0;
 185   1              Delay_Keys(100);
 186   1              if(d == 0) return 0;
 187   1              Delay_Keys(100);
 188   1              return d;
 189   1      }
 190          void Change_Keys_Alone()
 191          {
 192   1              switch(Scan_Keys_Alone())
 193   1              {
 194   2                      case 8:GN = 1;break;//S4
 195   2                      case 4:GN = 2;break;//S5
 196   2                      case 2:GN = 3;break;//S6
 197   2                      case 1:GN = 4;break;//S7
 198   2                      case 0:GN = 0;break;
 199   2              }
 200   1      }
 201          
 202          /***************************************************
 203          写法二：
 204          有按键被按下，按下是一种状态，松开是另一种状态
 205          （如：按下时某个灯亮，松开时灯灭）
 206          ***************************************************/
 207          void ScanKeys_Alone() 
 208          {
 209   1              if (S7 == 0) {
 210   2                      Delay_Keys(100);
 211   2                      if (S7 == 0) {
 212   3                              // =========================================== 代码开始 ======================================
 213   3                              
 214   3                              // =========================================== 代码结束 ======================================
 215   3                              while(S7 == 0);
 216   3                              // =========================================== 代码开始 ======================================
 217   3      
 218   3                              // =========================================== 代码结束 ======================================
 219   3                      }
 220   2              }
 221   1              
 222   1              if (S6 == 0) {
 223   2                      Delay_Keys(100);
 224   2                      if (S6 == 0) {
 225   3                              // =========================================== 代码开始 ======================================
 226   3                              
 227   3                              // =========================================== 代码结束 ======================================
 228   3                              while(S6 == 0);
 229   3                              // =========================================== 代码开始 ======================================
 230   3      
 231   3                              // =========================================== 代码结束 ======================================
 232   3                      }
 233   2              }
 234   1              
 235   1              if (S5 == 0) {
 236   2                      Delay_Keys(100);
 237   2                      if (S5 == 0) {
 238   3                              // =========================================== 代码开始 ======================================
 239   3      
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 5   

 240   3                              // =========================================== 代码结束 ======================================
 241   3                              while(S5 == 0);
 242   3                              // =========================================== 代码开始 ======================================
 243   3      
 244   3                              // =========================================== 代码结束 ======================================
 245   3                      }
 246   2              }
 247   1      
 248   1              if (S4 == 0) {
 249   2                      Delay_Keys(100);
 250   2                      if (S4 == 0) {
 251   3                              // =========================================== 代码开始 ======================================
 252   3      
 253   3                              // =========================================== 代码结束 ======================================
 254   3                              while(S4 == 0);
 255   3                              // =========================================== 代码开始 ======================================
 256   3      
 257   3                              // =========================================== 代码结束 ======================================
 258   3                      }
 259   2              }
 260   1      }
 261          
 262          // ================= 代码结束 =============
 263          
 264          //============================================矩阵按键============================================
 265          sfr P4 = 0xc0;
 266          sbit P44 = P4^4;
 267          sbit P42 = P4^2;
 268          
 269          uchar Scan_Keys()
 270          {
 271   1              char H,L;
 272   1              P3 =  0xcf;P44 = 0;P42 = 0;H = (~P3) & 0x0f;
 273   1              if(H == 0) return 0;
 274   1              Delay_Keys(100);
 275   1              P3 =  0xcf;P44 = 0;P42 = 0;H = (~P3) & 0x0f;
 276   1              if(H == 0) return 0;
 277   1              P3 =  0xf0;P44 = 1;P42 = 1;L = (~P3) & 0x30;
 278   1              if(P44 == 0) L |= 0x80;
 279   1              if(P42 == 0) L |= 0x40;
 280   1              return (H+L);
 281   1      }
 282          
 283          void Change_Keys()
 284          {
 285   1              switch(Scan_Keys())
 286   1              {
 287   2                      case 0x88:GN = 4;break;  // S4
 288   2                      case 0x84:GN = 5;break;  // S5
 289   2                      case 0x82:GN = 6;break;  // S6
 290   2                      case 0x81:GN = 7;break;  // S7
 291   2                      case 0x48:GN = 8;break;  // S8
 292   2                      case 0x44:GN = 9;break;  // S9
 293   2                      case 0x42:GN = 10;break;  // S10
 294   2                      case 0x41:GN = 11;break;  // S11
 295   2                      case 0x28:GN = 12;break;  // S12
 296   2                      case 0x24:GN = 13;break;  // S13
 297   2                      case 0x22:GN = 14;break;  // S14
 298   2                      case 0x21:GN = 15;break;  // S15
 299   2                      case 0x18:GN = 16;break;  // S16
 300   2                      case 0x14:GN = 17;break;  // S17
 301   2                      case 0x12:GN = 18;break;  // S18
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 6   

 302   2                      case 0x11:GN = 19;break;  // S19
 303   2                      case 0:GN = 0;break;
 304   2              }
 305   1      }
 306          
 307          sbit P32 = P3^2;
 308          sbit P33 = P3^3;
 309          void key_array_init() {
 310   1              P32 = 1;
 311   1              P33 = 1;
 312   1              P42 = 0;
 313   1              P44 = 0;
 314   1      }
 315          
 316          void key_array_scan() {
 317   1              GN = 0;
 318   1              if (P32 == 0) {
 319   2                      P32 = 0;
 320   2                      P42 = 1;
 321   2                      P44 = 1;
 322   2                      if (P42 == 0) {
 323   3                              Delay_Keys(100);
 324   3                              if (P42 == 0) {
 325   4                                      GN = 9;
 326   4      //                              while ();
 327   4                              }
 328   3                      }
 329   2                      else if (P44 == 0) {
 330   3                              Delay_Keys(100);
 331   3                              if (P44 == 0) {
 332   4                                      GN = 5;
 333   4      //                              while ();
 334   4                              }
 335   3                      }
 336   2              }
 337   1              
 338   1              if (P33 == 0) {
 339   2                      P33 = 0;
 340   2                      P42 = 1;
 341   2                      P44 = 1;
 342   2                      if (P42 == 0) {
 343   3                              Delay_Keys(100);
 344   3                              if (P42 == 0) {
 345   4                                      GN = 8;
 346   4      //                              while ();
 347   4                              }
 348   3                      }
 349   2                      else if (P44 == 0) {
 350   3                              Delay_Keys(100);
 351   3                              if (P44 == 0) {
 352   4                                      GN = 4;
 353   4                                      LED1_On();
 354   4                                      while(P44 == 0);
 355   4                                      LED1_Off();
 356   4                                      LED4_Off();
 357   4                                      s9_press_time = 0;
 358   4                              }
 359   3                      }
 360   2              }
 361   1              key_array_init();
 362   1      }
 363          
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 7   

 364          //============================================定时器T1初始化=======================================
 365          void Init_T1()
 366          {
 367   1              TMOD = (TMOD & 0xf0) | 0x10;//定时
 368   1              TH1 = (65536 - 2000) / 256;//2ms
 369   1              TL1 = (65536 - 2000) % 256;
 370   1              
 371   1              EA = 1;
 372   1              ET1 = 1;
 373   1              TR1 = 1;
 374   1      }
 375          //==========================================系统初始化=============================================
 376          void Init_Sys()
 377          {
 378   1              P2 = (P2 & 0x1f) | 0x80;  // LED
 379   1              P0 = 0xff;
 380   1              P2 &= 0x1f;
 381   1              P2 = (P2 & 0x1f) | 0xa0;  // 蜂鸣器，寄存器
 382   1              P0 = 0x00;
 383   1              P2 &= 0x1f;
 384   1              P2 = (P2 & 0x1f) | 0xc0;  // 数码管
 385   1              P0 = 0xff;
 386   1              P2 &= 0x1f;
 387   1              P2 = (P2 & 0x1f) | 0xe0;
 388   1              P0 = 0xff;
 389   1              
 390   1              num1=num2=num3=num4=num5=num6=num7=num8=10;
 391   1      }
 392          
 393          void LED_control() {
 394   1              // ================= 测试开始 =============
 395   1      //      P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 396   1      //      P0 = 0x7f;  // 要将P0放在这两句代码之间，避免错乱
 397   1      //      P2 &= 0x1f;
 398   1              // ================= 测试结束 =============
 399   1              
 400   1              // =========================================== 代码开始 ======================================
 401   1              
 402   1              // =========================================== 代码结束 ======================================
 403   1      }
 404          
 405          void main()
 406          {
 407   1              Init_Sys();
 408   1              Init_T1();
 409   1      //      Init_T0();
 410   1              
 411   1              while(1)
 412   1              {
 413   2      //              LED_control();
 414   2              if(f_2ms == 1)
 415   2              {
 416   3                  f_2ms = 0;                  
 417   3                              LED_control();  // xxx
 418   3                              // =======================按键========================
 419   3      //                      Change_Keys_Alone();  // 1.独立按键扫描(1)
 420   3      //                      ScanKeys_Alone();     // 2.独立按键扫描(2)
 421   3      //                      Change_Keys();        // 3.矩阵按键扫描
 422   3                              key_array_scan();
 423   3                              
 424   3                              // =========================================== 代码开始 ======================================
 425   3                              if (GN == 4) {
C51 COMPILER V9.60.7.0   MAIN                                                              04/10/2024 10:02:02 PAGE 8   

 426   4                                      num1 = 0;
 427   4                              }
 428   3                              if (GN == 5) num1 = 1;
 429   3                              if (GN == 6) num1 = 2;
 430   3                              if (GN == 7) num1 = 3;
 431   3                              if (GN == 8) num1 = 4;
 432   3                              if (GN == 9) num1 = 5;
 433   3                              if (GN == 10) num1 = 6;
 434   3                              if (GN == 11) num1 = 7;
 435   3                              if (GN == 12) num1 = 8;
 436   3                              if (GN == 13) num1 = 9;
 437   3                              
 438   3                              // =========================================== 代码结束 ======================================
 439   3              }
 440   2          }
 441   1      }
 442          void Service_T1() interrupt 3
 443          {
 444   1              TH1 = (65536 - 2000) / 256;
 445   1              TL1 = (65536 - 2000) % 256;
 446   1              
 447   1              f_2ms = 1;
 448   1              
 449   1              /***************************************************
 450   1              与时间相关的变量的更新放在里面
 451   1              注意：不要把消耗过长时间的代码（如for循环等）放在这里，容易造成错乱
 452   1              ***************************************************/
 453   1              // =========================================== 代码开始 ======================================
 454   1              if (GN == 4) {
 455   2                      s9_press_time ++ ;
 456   2                      if (s9_press_time >= 1000) {
 457   3                              s9_press_time = 0;
 458   3      //                      s9_long = 1;
 459   3                              LED4_On();
 460   3                      }
 461   2              }
 462   1              // =========================================== 代码结束 ======================================
 463   1              
 464   1              Display_SMG(num1,num2,num3,num4,num5,num6,num7,num8);//2ms刷新数码管
 465   1      }
*** WARNING C294 IN LINE 160 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1216    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)

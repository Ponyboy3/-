C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          
   3          #define uchar unsigned char 
   4          #define uint unsigned int
   5          
   6          // 数码管显示数据， 一般前10个为0-9， 可更具需要往里面添加
   7          uchar code type1[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf,0x8e,0xc8,0xc1};
   8          // xxx
   9          uchar code type2[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  10          
  11          uchar num1,num2,num3,num4,num5,num6,num7,num8;  // 数码管每一位（例如 num1 = 2, 第一个数码管显示 2）
  12          uchar GN;  // 按键标志位
  13          bit f_2ms, f_50ms;  // 2ms, 50ms标志位
  14          uchar temp_Led_P0 = 0xff;  // 用来存上一次LED状态
  15          
  16          sbit S7 = P3^0;
  17          sbit S6 = P3^1;
  18          sbit S5 = P3^2;
  19          sbit S4 = P3^3;
  20          
  21          sbit L0 = P0^0;
  22          sbit L1 = P0^1;
  23          sbit L2 = P0^2;
  24          sbit L3 = P0^3;
  25          sbit L4 = P0^4;
  26          sbit L5 = P0^5;
  27          sbit L6 = P0^6;
  28          
  29          // =========================================== 代码开始 ======================================
  30          bit f_1s;  // 1s标志位
  31          
  32          uint num_2ms = 0, num_s = 0;  // 多少个2ms, 1s
  33          // =========================================== 代码结束 ======================================
  34          
  35          
  36          //=========================================普通延时函数(模板函数)=================================
  37          void Delay(uint t) {
  38   1              while( t -- );
  39   1              while( t -- );
  40   1      }
  41          //=======================================单个LED控制函数(模板函数)================================
  42          // 根据项目需要删减
  43          
  44          // ======================LED0====================
  45          void LED0_On() {
  46   1              P0 = 0xff & temp_Led_P0;  // 清除其他地方对P0的值（特别是数码管一直在刷新），并且结合LED前一次的状态
  47   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  48   1              L0 = 0;  // 要将P0放在这两句代码之间，避免错乱
  49   1              temp_Led_P0 = P0;
  50   1              P2 &= 0x1f;
  51   1      }
  52          void LED0_Off() {
  53   1              P0 = 0xff & temp_Led_P0;
  54   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 2   

  55   1              L0 = 1;  // 要将P0放在这两句代码之间，避免错乱
  56   1              temp_Led_P0 = P0;
  57   1              P2 &= 0x1f;
  58   1      }
  59          // ======================LED1====================
  60          void LED1_On() {
  61   1              P0 = 0xff & temp_Led_P0;  // 清除其他地方对P0的值（特别是数码管一直在刷新），并且结合LED前一次的状态
  62   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  63   1              L1 = 0;  // 要将P0放在这两句代码之间，避免错乱
  64   1              temp_Led_P0 = P0;
  65   1              P2 &= 0x1f;
  66   1      }
  67          void LED1_Off() {
  68   1              P0 = 0xff & temp_Led_P0;
  69   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  70   1              L1 = 1;  // 要将P0放在这两句代码之间，避免错乱
  71   1              temp_Led_P0 = P0;
  72   1              P2 &= 0x1f;
  73   1      }
  74          // ======================LED2====================
  75          void LED2_On() {
  76   1              P0 = 0xff & temp_Led_P0;
  77   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  78   1              L2 = 0;  // 要将P0放在这两句代码之间，避免错乱
  79   1              temp_Led_P0 = P0;
  80   1              P2 &= 0x1f;
  81   1      }
  82          void LED2_Off() {
  83   1              P0 = 0xff & temp_Led_P0;
  84   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  85   1              L2 = 1;  // 要将P0放在这两句代码之间，避免错乱
  86   1              temp_Led_P0 = P0;
  87   1              P2 &= 0x1f;
  88   1      }
  89          // ======================LED3====================
  90          void LED3_On() {
  91   1              P0 = 0xff & temp_Led_P0;
  92   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  93   1              L3 = 0;  // 要将P0放在这两句代码之间，避免错乱
  94   1              temp_Led_P0 = P0;
  95   1              P2 &= 0x1f;
  96   1      }
  97          void LED3_Off() {
  98   1              P0 = 0xff & temp_Led_P0;
  99   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 100   1              L3 = 1;  // 要将P0放在这两句代码之间，避免错乱
 101   1              temp_Led_P0 = P0;
 102   1              P2 &= 0x1f;
 103   1      }
 104          // ======================LED4====================
 105          void LED4_On() {
 106   1              P0 = 0xff & temp_Led_P0;
 107   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 108   1              L4 = 0;  // 要将P0放在这两句代码之间，避免错乱
 109   1              temp_Led_P0 = P0;
 110   1              P2 &= 0x1f;
 111   1      }
 112          void LED4_Off() {
 113   1              P0 = 0xff & temp_Led_P0 & temp_Led_P0;
 114   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 115   1              L4 = 1;  // 要将P0放在这两句代码之间，避免错乱
 116   1              temp_Led_P0 = P0;
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 3   

 117   1              P2 &= 0x1f;
 118   1      }
 119          // ======================LED5====================
 120          void LED5_On() {
 121   1              P0 = 0xff & temp_Led_P0;
 122   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 123   1              L5 = 0;  // 要将P0放在这两句代码之间，避免错乱
 124   1              temp_Led_P0 = P0;
 125   1              P2 &= 0x1f;
 126   1      }
 127          void LED5_Off() {
 128   1              P0 = 0xff & temp_Led_P0;
 129   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 130   1              L5 = 1;  // 要将P0放在这两句代码之间，避免错乱
 131   1              temp_Led_P0 = P0;
 132   1              P2 &= 0x1f;
 133   1      }
 134          // ======================LED6====================
 135          void LED6_On() {
 136   1              P0 = 0xff & temp_Led_P0;
 137   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 138   1              L6 = 0;  // 要将P0放在这两句代码之间，避免错乱
 139   1              temp_Led_P0 = P0;
 140   1              P2 &= 0x1f;
 141   1      }
 142          void LED6_Off() {
 143   1              P0 = 0xff & temp_Led_P0;
 144   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 145   1              L6 = 1;  // 要将P0放在这两句代码之间，避免错乱
 146   1              temp_Led_P0 = P0;
 147   1              P2 &= 0x1f;
 148   1      }
 149          
 150          void LED_On(uchar n) {
 151   1              P0 = 0xff & temp_Led_P0;
 152   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 153   1              L6 = 0;  // 要将P0放在这两句代码之间，避免错乱
 154   1              temp_Led_P0 = P0;
 155   1              P2 &= 0x1f;
 156   1      }
*** WARNING C280 IN LINE 150 OF main.c: 'n': unreferenced local variable
 157          //=========================================数码管显示==============================================
 158          void Display_SMG(uchar n1,uchar n2,uchar n3,uchar n4,uchar n5,uchar n6,uchar n7,uchar n8)
 159          {
 160   1              char i;
 161   1              P0 = 0xff;
 162   1              P2 = (P2 & 0x1f) | 0xc0;//数码管位选
 163   1              P0 = type2[i];
 164   1              P2 &= 0x1f;
 165   1              switch(i)//数码管位选
 166   1              {
 167   2                      case 0:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n1];P2 &= 0x1f;break;
 168   2                      case 1:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n2];P2 &= 0x1f;break;
 169   2                      case 2:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n3];P2 &= 0x1f;break;
 170   2                      case 3:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n4];P2 &= 0x1f;break;
 171   2                      case 4:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n5];P2 &= 0x1f;break;
 172   2                      case 5:P2 = (P2 & 0x1f) | 0xe0;
 173   2                                                                              if(0)  // 根据需要的条件
 174   2                                                                              {
 175   3                                                                                      P0 = type1[n6]&0x7f;  // 加入小数点
 176   3                                                                              }
 177   2                                                                              else
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 4   

 178   2                                                                                      P0 = type1[n6];
 179   2                                                                                                        P2 &= 0x1f;break;
 180   2                      case 6:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n7];P2 &= 0x1f;break;
 181   2                      case 7:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n8];P2 &= 0x1f;break;
 182   2              }
 183   1              if(++i==8)
 184   1                      i = 0;
 185   1      }
 186          //============================================独立按键============================================
 187          /***************************************************
 188          写法一：
 189          有按键被按下，GN标记，后面根据需要功能进行操作
 190          ***************************************************/
 191          void Delay_Keys(uint t)
 192          {
 193   1              while(t--);
 194   1      }
 195          uchar Scan_Keys_Alone()
 196          {
 197   1              char d;
 198   1              d = (~P3) & 0x0f;
 199   1              if(d == 0) return 0;
 200   1              Delay_Keys(100);
 201   1              if(d == 0) return 0;
 202   1              Delay_Keys(100);
 203   1              return d;
 204   1      }
 205          void Change_Keys_Alone()
 206          {
 207   1              switch(Scan_Keys_Alone())
 208   1              {
 209   2                      case 8:GN = 1;break;//S4
 210   2                      case 4:GN = 2;break;//S5
 211   2                      case 2:GN = 3;break;//S6
 212   2                      case 1:GN = 4;break;//S7
 213   2                      case 0:GN = 0;break;
 214   2              }
 215   1      }
 216          
 217          /***************************************************
 218          写法二：
 219          有按键被按下，按下是一种状态，松开是另一种状态
 220          （如：按下时某个灯亮，松开时灯灭）
 221          ***************************************************/
 222          void ScanKeys_Alone() 
 223          {
 224   1              if (S7 == 0) {
 225   2                      Delay_Keys(100);
 226   2                      if (S7 == 0) {
 227   3                              // =========================================== 代码开始 ======================================
 228   3                              
 229   3                              // =========================================== 代码结束 ======================================
 230   3                              while(S7 == 0);
 231   3                              // =========================================== 代码开始 ======================================
 232   3      
 233   3                              // =========================================== 代码结束 ======================================
 234   3                      }
 235   2              }
 236   1              
 237   1              if (S6 == 0) {
 238   2                      Delay_Keys(100);
 239   2                      if (S6 == 0) {
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 5   

 240   3                              // =========================================== 代码开始 ======================================
 241   3                              
 242   3                              // =========================================== 代码结束 ======================================
 243   3                              while(S6 == 0);
 244   3                              // =========================================== 代码开始 ======================================
 245   3      
 246   3                              // =========================================== 代码结束 ======================================
 247   3                      }
 248   2              }
 249   1              
 250   1              if (S5 == 0) {
 251   2                      Delay_Keys(100);
 252   2                      if (S5 == 0) {
 253   3                              // =========================================== 代码开始 ======================================
 254   3      
 255   3                              // =========================================== 代码结束 ======================================
 256   3                              while(S5 == 0);
 257   3                              // =========================================== 代码开始 ======================================
 258   3      
 259   3                              // =========================================== 代码结束 ======================================
 260   3                      }
 261   2              }
 262   1      
 263   1              if (S4 == 0) {
 264   2                      Delay_Keys(100);
 265   2                      if (S4 == 0) {
 266   3                              // =========================================== 代码开始 ======================================
 267   3      
 268   3                              // =========================================== 代码结束 ======================================
 269   3                              while(S4 == 0);
 270   3                              // =========================================== 代码开始 ======================================
 271   3      
 272   3                              // =========================================== 代码结束 ======================================
 273   3                      }
 274   2              }
 275   1      }
 276          
 277          // ================= 代码结束 =============
 278          
 279          //============================================矩阵按键============================================
 280          sfr P4 = 0xc0;
 281          sbit P44 = P4^4;
 282          sbit P42 = P4^2;
 283          
 284          uchar Scan_Keys()
 285          {
 286   1              char H,L;
 287   1              P3 =  0xcf;P44 = 0;P42 = 0;H = (~P3) & 0x0f;
 288   1              if(H == 0) return 0;
 289   1              Delay_Keys(100);
 290   1              P3 =  0xcf;P44 = 0;P42 = 0;H = (~P3) & 0x0f;
 291   1              if(H == 0) return 0;
 292   1              P3 =  0xf0;P44 = 1;P42 = 1;L = (~P3) & 0x30;
 293   1              if(P44 == 0) L |= 0x80;
 294   1              if(P42 == 0) L |= 0x40;
 295   1              return (H+L);
 296   1      }
 297          
 298          void Change_Keys()
 299          {
 300   1              switch(Scan_Keys())
 301   1              {
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 6   

 302   2                      case 0x88:GN = 4;break;  // S4
 303   2                      case 0x84:GN = 5;break;  // S5
 304   2                      case 0x82:GN = 6;break;  // S6
 305   2                      case 0x81:GN = 7;break;  // S7
 306   2                      case 0x48:GN = 8;break;  // S8
 307   2                      case 0x44:GN = 9;break;  // S9
 308   2                      case 0x42:GN = 10;break;  // S10
 309   2                      case 0x41:GN = 11;break;  // S11
 310   2                      case 0x28:GN = 12;break;  // S12
 311   2                      case 0x24:GN = 13;break;  // S13
 312   2                      case 0x22:GN = 14;break;  // S14
 313   2                      case 0x21:GN = 15;break;  // S15
 314   2                      case 0x18:GN = 16;break;  // S16
 315   2                      case 0x14:GN = 17;break;  // S17
 316   2                      case 0x12:GN = 18;break;  // S18
 317   2                      case 0x11:GN = 19;break;  // S19
 318   2                      case 0:GN = 0;break;
 319   2              }
 320   1      }
 321          //============================================定时器T0初始化=======================================
 322          uchar count = 0;
 323          uchar pwm_dut = 0;//占空比
 324          void Init_T0()
 325          {
 326   1              TMOD = (TMOD & 0xf0) | 0x01;  // 定时
 327   1              TH0 = (65536 - 100) / 256;  // 50ms
 328   1              TL0 = (65536 - 100) % 256; 
 329   1              
 330   1              EA = 1;
 331   1              ET0 = 1;
 332   1      //      TR0 = 1;
 333   1      }
 334          //============================================定时器T1初始化=======================================
 335          void Init_T1()
 336          {
 337   1              TMOD = (TMOD & 0x0f) | 0x10;//定时
 338   1              TH1 = (65536 - 2000) / 256;//2ms
 339   1              TL1 = (65536 - 2000) % 256;
 340   1              
 341   1              EA = 1;
 342   1              ET1 = 1;
 343   1              TR1 = 1;
 344   1      }
 345          //==========================================系统初始化=============================================
 346          void Init_Sys()
 347          {
 348   1              P2 = (P2 & 0x1f) | 0x80;  // LED
 349   1              P0 = 0xff;
 350   1              P2 &= 0x1f;
 351   1              P2 = (P2 & 0x1f) | 0xa0;  // 蜂鸣器，寄存器
 352   1              P0 = 0x00;
 353   1              P2 &= 0x1f;
 354   1              P2 = (P2 & 0x1f) | 0xc0;  // 数码管
 355   1              P0 = 0xff;
 356   1              P2 &= 0x1f;
 357   1              P2 = (P2 & 0x1f) | 0xe0;
 358   1              P0 = 0xff;
 359   1              
 360   1              num1=num2=num3=num4=num5=num6=num7=num8=10;
 361   1      }
 362          
 363          void LED_control() {
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 7   

 364   1              // ================= 测试开始 =============
 365   1      //      P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 366   1      //      P0 = 0x7f;  // 要将P0放在这两句代码之间，避免错乱
 367   1      //      P2 &= 0x1f;
 368   1              // ================= 测试结束 =============
 369   1              
 370   1              // =========================================== 代码开始 ======================================
 371   1              
 372   1              // =========================================== 代码结束 ======================================
 373   1      }
 374          
 375          void main()
 376          {
 377   1              Init_Sys();
 378   1              Init_T1();
 379   1              
 380   1              while(1)
 381   1              {
 382   2      //              LED_control();
 383   2              if(f_2ms == 1)
 384   2              {
 385   3                  f_2ms = 0;                  
 386   3                              LED_control();  // xxx
 387   3                              // =======================按键开始========================
 388   3                              /*根据需要选择对应的按键类型*/
 389   3      //                      Change_Keys_Alone();  // 1.独立按键扫描(1)
 390   3      //                      ScanKeys_Alone();     // 2.独立按键扫描(2)
 391   3                              Change_Keys();        // 3.矩阵按键扫描
 392   3                              if (GN == 16) {  // S16
 393   4                                      // =========================================== 代码开始 ======================================
 394   4                                      LED1_On();
 395   4                                      // =========================================== 代码结束 ======================================
 396   4                                      while(Scan_Keys());
 397   4                                      // =========================================== 代码开始 ======================================
 398   4                                      LED1_Off();
 399   4                                      // =========================================== 代码结束 ======================================
 400   4                              }
 401   3                              // 根据需要添加对应按键
 402   3                              // =======================按键结束========================
 403   3                              
 404   3                              // =========================================== 代码开始 ======================================
 405   3                              
 406   3                              // =========================================== 代码结束 ======================================
 407   3              }
 408   2          }
 409   1      }
 410          
 411          void Service_T0() interrupt 2
 412          {
 413   1              TH0 = (65536 - 50000) / 256;
 414   1              TL0 = (65536 - 50000) % 256;
 415   1              
 416   1              f_50ms = 1;
 417   1              
 418   1      }
 419          
 420          void Service_T1() interrupt 3
 421          {
 422   1              TH1 = (65536 - 2000) / 256;
 423   1              TL1 = (65536 - 2000) % 256;
 424   1              
 425   1              f_2ms = 1;
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 23:24:46 PAGE 8   

 426   1              
 427   1              /***************************************************
 428   1              与时间相关的变量的更新放在里面
 429   1              注意：不要把消耗过长时间的代码（如for循环等）放在这里，容易造成错乱
 430   1              ***************************************************/
 431   1              // =========================================== 代码开始 ======================================
 432   1              num_2ms ++ ;
 433   1              if (num_2ms == 500) {
 434   2                      f_1s = 1;
 435   2                      num_2ms = 0;
 436   2              }
 437   1              if (f_1s == 1) {
 438   2                      f_1s = 0;
 439   2                      num_s ++ ;
 440   2                      if (num_s == 9) 
 441   2                      num_s = 0;
 442   2              }
 443   1              num1 = 2;num2 = 0; num3 = 2; num4 = 4;
 444   1              num5=num6=11;
 445   1              num7=num_s / 10, num8=num_s % 10;
 446   1              // =========================================== 代码结束 ======================================
 447   1              
 448   1              Display_SMG(num1,num2,num3,num4,num5,num6,num7,num8);//2ms刷新数码管
 449   1      }
*** WARNING C294 IN LINE 175 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1189    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg52.h"
   2          
   3          #define uchar unsigned char 
   4          #define uint unsigned int
   5          
   6          // 数码管显示数据， 一般前10个为0-9， 可更具需要往里面添加
   7          uchar code type1[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0xbf,0x8e,0xc8,0xc1};
   8          // xxx
   9          uchar code type2[] = {0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  10          
  11          uchar num1,num2,num3,num4,num5,num6,num7,num8;  // 数码管每一位（例如 num1 = 2, 第一个数码管显示 2）
  12          uchar GN;  // 按键标志位
  13          bit f_2ms;  // 2ms标志位
  14          uchar temp_Led_P0 = 0xff;  // 用来存上一次LED状态
  15          
  16          sbit S7 = P3^0;
  17          sbit S6 = P3^1;
  18          sbit S5 = P3^2;
  19          sbit S4 = P3^3;
  20          
  21          sbit L1 = P0^0;
  22          sbit L2 = P0^1;
  23          sbit L3 = P0^2;
  24          sbit L4 = P0^3;
  25          sbit L5 = P0^4;
  26          sbit L6 = P0^5;
  27          
  28          // =========================================== 代码开始 ======================================
  29          bit f_1s;  // 1s标志位
  30          
  31          uint num_2ms = 0, num_s = 0;  // 多少个2ms, 1s
  32          // =========================================== 代码结束 ======================================
  33          
  34          
  35          //=========================================普通延时函数(模板函数)=================================
  36          void Delay(uint t) {
  37   1              while( t -- );
  38   1              while( t -- );
  39   1      }
  40          //=======================================单个LED控制函数(模板函数)================================
  41          // ======================LED1====================
  42          void LED1_On() {
  43   1              P0 = 0xff & temp_Led_P0;  // 清除其他地方对P0的值（特别是数码管一直在刷新），并且结合LED前一次的状态
  44   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  45   1              L1 = 0;  // 要将P0放在这两句代码之间，避免错乱
  46   1              temp_Led_P0 = P0;
  47   1              P2 &= 0x1f;
  48   1      }
  49          void LED1_Off() {
  50   1              P0 = 0xff & temp_Led_P0;
  51   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  52   1              L1 = 1;  // 要将P0放在这两句代码之间，避免错乱
  53   1              temp_Led_P0 = P0;
  54   1              P2 &= 0x1f;
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 2   

  55   1      }
  56          // ======================LED2====================
  57          void LED2_On() {
  58   1              P0 = 0xff & temp_Led_P0;
  59   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  60   1              L2 = 0;  // 要将P0放在这两句代码之间，避免错乱
  61   1              temp_Led_P0 = P0;
  62   1              P2 &= 0x1f;
  63   1      }
  64          void LED2_Off() {
  65   1              P0 = 0xff & temp_Led_P0;
  66   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  67   1              L2 = 1;  // 要将P0放在这两句代码之间，避免错乱
  68   1              temp_Led_P0 = P0;
  69   1              P2 &= 0x1f;
  70   1      }
  71          // ======================LED3====================
  72          void LED3_On() {
  73   1              P0 = 0xff & temp_Led_P0;
  74   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  75   1              L3 = 0;  // 要将P0放在这两句代码之间，避免错乱
  76   1              temp_Led_P0 = P0;
  77   1              P2 &= 0x1f;
  78   1      }
  79          void LED3_Off() {
  80   1              P0 = 0xff & temp_Led_P0;
  81   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  82   1              L3 = 1;  // 要将P0放在这两句代码之间，避免错乱
  83   1              temp_Led_P0 = P0;
  84   1              P2 &= 0x1f;
  85   1      }
  86          // ======================LED4====================
  87          void LED4_On() {
  88   1              P0 = 0xff & temp_Led_P0;
  89   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  90   1              L4 = 0;  // 要将P0放在这两句代码之间，避免错乱
  91   1              temp_Led_P0 = P0;
  92   1              P2 &= 0x1f;
  93   1      }
  94          void LED4_Off() {
  95   1              P0 = 0xff & temp_Led_P0 & temp_Led_P0;
  96   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
  97   1              L4 = 1;  // 要将P0放在这两句代码之间，避免错乱
  98   1              temp_Led_P0 = P0;
  99   1              P2 &= 0x1f;
 100   1      }
 101          // ======================LED5====================
 102          void LED5_On() {
 103   1              P0 = 0xff & temp_Led_P0;
 104   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 105   1              L5 = 0;  // 要将P0放在这两句代码之间，避免错乱
 106   1              temp_Led_P0 = P0;
 107   1              P2 &= 0x1f;
 108   1      }
 109          void LED5_Off() {
 110   1              P0 = 0xff & temp_Led_P0;
 111   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 112   1              L5 = 1;  // 要将P0放在这两句代码之间，避免错乱
 113   1              temp_Led_P0 = P0;
 114   1              P2 &= 0x1f;
 115   1      }
 116          // ======================LED6====================
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 3   

 117          void LED6_On() {
 118   1              P0 = 0xff & temp_Led_P0;
 119   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 120   1              L6 = 0;  // 要将P0放在这两句代码之间，避免错乱
 121   1              temp_Led_P0 = P0;
 122   1              P2 &= 0x1f;
 123   1      }
 124          void LED6_Off() {
 125   1              P0 = 0xff & temp_Led_P0;
 126   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 127   1              L6 = 1;  // 要将P0放在这两句代码之间，避免错乱
 128   1              temp_Led_P0 = P0;
 129   1              P2 &= 0x1f;
 130   1      }
 131          
 132          void LED_On(uchar n) {
 133   1              P0 = 0xff & temp_Led_P0;
 134   1              P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 135   1              L6 = 0;  // 要将P0放在这两句代码之间，避免错乱
 136   1              temp_Led_P0 = P0;
 137   1              P2 &= 0x1f;
 138   1      }
*** WARNING C280 IN LINE 132 OF main.c: 'n': unreferenced local variable
 139          //=========================================数码管显示==============================================
 140          void Display_SMG(uchar n1,uchar n2,uchar n3,uchar n4,uchar n5,uchar n6,uchar n7,uchar n8)
 141          {
 142   1              char i;
 143   1              P0 = 0xff;
 144   1              P2 = (P2 & 0x1f) | 0xc0;//数码管位选
 145   1              P0 = type2[i];
 146   1              P2 &= 0x1f;
 147   1              switch(i)//数码管位选
 148   1              {
 149   2                      case 0:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n1];P2 &= 0x1f;break;
 150   2                      case 1:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n2];P2 &= 0x1f;break;
 151   2                      case 2:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n3];P2 &= 0x1f;break;
 152   2                      case 3:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n4];P2 &= 0x1f;break;
 153   2                      case 4:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n5];P2 &= 0x1f;break;
 154   2                      case 5:P2 = (P2 & 0x1f) | 0xe0;
 155   2                                                                              if(0)  // 根据需要的条件
 156   2                                                                              {
 157   3                                                                                      P0 = type1[n6]&0x7f;  // 加入小数点
 158   3                                                                              }
 159   2                                                                              else
 160   2                                                                                      P0 = type1[n6];
 161   2                                                                                                        P2 &= 0x1f;break;
 162   2                      case 6:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n7];P2 &= 0x1f;break;
 163   2                      case 7:P2 = (P2 & 0x1f) | 0xe0;P0 = type1[n8];P2 &= 0x1f;break;
 164   2              }
 165   1              if(++i==8)
 166   1                      i = 0;
 167   1      }
 168          //============================================独立按键============================================
 169          /***************************************************
 170          写法一：
 171          有按键被按下，GN标记，后面根据需要功能进行操作
 172          ***************************************************/
 173          void Delay_Keys(uint t)
 174          {
 175   1              while(t--);
 176   1      }
 177          uchar Scan_Keys_Alone()
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 4   

 178          {
 179   1              char d;
 180   1              d = (~P3) & 0x0f;
 181   1              if(d == 0) return 0;
 182   1              Delay_Keys(100);
 183   1              if(d == 0) return 0;
 184   1              Delay_Keys(100);
 185   1              return d;
 186   1      }
 187          void Change_Keys_Alone()
 188          {
 189   1              switch(Scan_Keys_Alone())
 190   1              {
 191   2                      case 8:GN = 1;break;//S4
 192   2                      case 4:GN = 2;break;//S5
 193   2                      case 2:GN = 3;break;//S6
 194   2                      case 1:GN = 4;break;//S7
 195   2                      case 0:GN = 0;break;
 196   2              }
 197   1      }
 198          
 199          /***************************************************
 200          写法二：
 201          有按键被按下，按下是一种状态，松开是另一种状态
 202          （如：按下时某个灯亮，松开时灯灭）
 203          ***************************************************/
 204          void ScanKeys_Alone() 
 205          {
 206   1              if (S7 == 0) {
 207   2                      Delay_Keys(100);
 208   2                      if (S7 == 0) {
 209   3                              // =========================================== 代码开始 ======================================
 210   3                              
 211   3                              // =========================================== 代码结束 ======================================
 212   3                              while(S7 == 0);
 213   3                              // =========================================== 代码开始 ======================================
 214   3      
 215   3                              // =========================================== 代码结束 ======================================
 216   3                      }
 217   2              }
 218   1              
 219   1              if (S6 == 0) {
 220   2                      Delay_Keys(100);
 221   2                      if (S6 == 0) {
 222   3                              // =========================================== 代码开始 ======================================
 223   3                              
 224   3                              // =========================================== 代码结束 ======================================
 225   3                              while(S6 == 0);
 226   3                              // =========================================== 代码开始 ======================================
 227   3      
 228   3                              // =========================================== 代码结束 ======================================
 229   3                      }
 230   2              }
 231   1              
 232   1              if (S5 == 0) {
 233   2                      Delay_Keys(100);
 234   2                      if (S5 == 0) {
 235   3                              // =========================================== 代码开始 ======================================
 236   3      
 237   3                              // =========================================== 代码结束 ======================================
 238   3                              while(S5 == 0);
 239   3                              // =========================================== 代码开始 ======================================
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 5   

 240   3      
 241   3                              // =========================================== 代码结束 ======================================
 242   3                      }
 243   2              }
 244   1      
 245   1              if (S4 == 0) {
 246   2                      Delay_Keys(100);
 247   2                      if (S4 == 0) {
 248   3                              // =========================================== 代码开始 ======================================
 249   3      
 250   3                              // =========================================== 代码结束 ======================================
 251   3                              while(S4 == 0);
 252   3                              // =========================================== 代码开始 ======================================
 253   3      
 254   3                              // =========================================== 代码结束 ======================================
 255   3                      }
 256   2              }
 257   1      }
 258          
 259          // ================= 代码结束 =============
 260          
 261          //============================================矩阵按键============================================
 262          sfr P4 = 0xc0;
 263          sbit P44 = P4^4;
 264          sbit P42 = P4^2;
 265          
 266          uchar Scan_Keys()
 267          {
 268   1              char H,L;
 269   1              P3 =  0xcf;P44 = 0;P42 = 0;H = (~P3) & 0x0f;
 270   1              if(H == 0) return 0;
 271   1              Delay_Keys(100);
 272   1              P3 =  0xcf;P44 = 0;P42 = 0;H = (~P3) & 0x0f;
 273   1              if(H == 0) return 0;
 274   1              P3 =  0xf0;P44 = 1;P42 = 1;L = (~P3) & 0x30;
 275   1              if(P44 == 0) L |= 0x80;
 276   1              if(P42 == 0) L |= 0x40;
 277   1              return (H+L);
 278   1      }
 279          
 280          void Change_Keys()
 281          {
 282   1              switch(Scan_Keys())
 283   1              {
 284   2                      case 0x88:GN = 4;break;  // S4
 285   2                      case 0x84:GN = 5;break;  // S5
 286   2                      case 0x82:GN = 6;break;  // S6
 287   2                      case 0x81:GN = 7;break;  // S7
 288   2                      case 0x48:GN = 8;break;  // S8
 289   2                      case 0x44:GN = 9;break;  // S9
 290   2                      case 0x42:GN = 10;break;  // S10
 291   2                      case 0x41:GN = 11;break;  // S11
 292   2                      case 0x28:GN = 12;break;  // S12
 293   2                      case 0x24:GN = 13;break;  // S13
 294   2                      case 0x22:GN = 14;break;  // S14
 295   2                      case 0x21:GN = 15;break;  // S15
 296   2                      case 0x18:GN = 16;break;  // S16
 297   2                      case 0x14:GN = 17;break;  // S17
 298   2                      case 0x12:GN = 18;break;  // S18
 299   2                      case 0x11:GN = 19;break;  // S19
 300   2                      case 0:GN = 0;break;
 301   2              }
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 6   

 302   1      }
 303          //============================================定时器T1初始化=======================================
 304          void Init_T1()
 305          {
 306   1              TMOD = (TMOD & 0xf0) | 0x10;//定时
 307   1              TH1 = (65536 - 2000) / 256;//2ms
 308   1              TL1 = (65536 - 2000) % 256;
 309   1              
 310   1              EA = 1;
 311   1              ET1 = 1;
 312   1              TR1 = 1;
 313   1      }
 314          //==========================================系统初始化=============================================
 315          void Init_Sys()
 316          {
 317   1              P2 = (P2 & 0x1f) | 0x80;  // LED
 318   1              P0 = 0xff;
 319   1              P2 &= 0x1f;
 320   1              P2 = (P2 & 0x1f) | 0xa0;  // 蜂鸣器，寄存器
 321   1              P0 = 0x00;
 322   1              P2 &= 0x1f;
 323   1              P2 = (P2 & 0x1f) | 0xc0;  // 数码管
 324   1              P0 = 0xff;
 325   1              P2 &= 0x1f;
 326   1              P2 = (P2 & 0x1f) | 0xe0;
 327   1              P0 = 0xff;
 328   1              
 329   1              num1=num2=num3=num4=num5=num6=num7=num8=10;
 330   1      }
 331          
 332          void LED_control() {
 333   1              // ================= 测试开始 =============
 334   1      //      P2 = (P2 & 0x1f) | 0x80;  // LED控制开启
 335   1      //      P0 = 0x7f;  // 要将P0放在这两句代码之间，避免错乱
 336   1      //      P2 &= 0x1f;
 337   1              // ================= 测试结束 =============
 338   1              
 339   1              // =========================================== 代码开始 ======================================
 340   1              
 341   1              // =========================================== 代码结束 ======================================
 342   1      }
 343          
 344          void main()
 345          {
 346   1              Init_Sys();
 347   1              Init_T1();
 348   1      //      Init_T0();
 349   1              
 350   1              while(1)
 351   1              {
 352   2      //              LED_control();
 353   2              if(f_2ms == 1)
 354   2              {
 355   3                  f_2ms = 0;                  
 356   3                              LED_control();  // xxx
 357   3                              // =======================按键========================
 358   3      //                      Change_Keys_Alone();  // 1.独立按键扫描(1)
 359   3      //                      ScanKeys_Alone();     // 2.独立按键扫描(2)
 360   3                              Change_Keys();        // 3.矩阵按键扫描
 361   3                              
 362   3                              // =========================================== 代码开始 ======================================
 363   3                              if (GN == 4) {
C51 COMPILER V9.60.7.0   MAIN                                                              04/05/2024 17:37:39 PAGE 7   

 364   4                                      num1 = 0;
 365   4                                      while(Scan_Keys());
 366   4                              }
 367   3                              if (GN == 5) num1 = 1;
 368   3                              if (GN == 6) num1 = 2;
 369   3                              if (GN == 7) num1 = 3;
 370   3                              if (GN == 8) num1 = 4;
 371   3                              if (GN == 9) num1 = 5;
 372   3                              if (GN == 10) num1 = 6;
 373   3                              if (GN == 11) num1 = 7;
 374   3                              if (GN == 12) num1 = 8;
 375   3                              if (GN == 13) num1 = 9;
 376   3                              // =========================================== 代码结束 ======================================
 377   3              }
 378   2          }
 379   1      }
 380          void Service_T1() interrupt 3
 381          {
 382   1              TH1 = (65536 - 2000) / 256;
 383   1              TL1 = (65536 - 2000) % 256;
 384   1              
 385   1              f_2ms = 1;
 386   1              
 387   1              /***************************************************
 388   1              与时间相关的变量的更新放在里面
 389   1              注意：不要把消耗过长时间的代码（如for循环等）放在这里，容易造成错乱
 390   1              ***************************************************/
 391   1              // =========================================== 代码开始 ======================================
 392   1      //      num_2ms ++ ;
 393   1      //      if (num_2ms == 500) {
 394   1      //              f_1s = 1;
 395   1      //              num_2ms = 0;
 396   1      //      }
 397   1      //      if (f_1s == 1) {
 398   1      //              f_1s = 0;
 399   1      //              num_s ++ ;
 400   1      //              if (num_s == 9) 
 401   1      //              num_s = 0;
 402   1      //      }
 403   1      //      num1 = 2;num2 = 0; num3 = 2; num4 = 4;
 404   1      //      num5=num6=11;
 405   1      //      num7=num8=num_s;
 406   1              // =========================================== 代码结束 ======================================
 407   1              
 408   1              Display_SMG(num1,num2,num3,num4,num5,num6,num7,num8);//2ms刷新数码管
 409   1      }
*** WARNING C294 IN LINE 157 OF main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1086    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)

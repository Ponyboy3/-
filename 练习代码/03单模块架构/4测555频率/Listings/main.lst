C51 COMPILER V9.60.0.0   MAIN                                                              07/21/2022 16:02:56 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keilc\pack_file\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /************************************
   2          练习测量555频率的程序
   3          ************************************/
   4          #include <STC15F2K60S2.H>
   5          #include <intrins.h>
   6          #define uchar unsigned char 
   7          #define uint unsigned int
   8            
   9          uchar code type1[]={  0xC0,
  10                                0xF9,
  11                                0xA4,
  12                                0xB0,
  13                                0x99,
  14                                0x92,
  15                                0x82,
  16                                0xF8,
  17                                0x80,
  18                                0x90,0xff};
  19          uchar code type2[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  20          uchar num1,num2,num3,num4,num5,num6,num7,num8;
  21          bit f_2ms;
  22          uchar t_2ms;
  23          bit flag;
  24          uint temp;
  25          
  26          
  27          
  28          void smg_display(char n1,char n2,char n3,char n4,char n5,char n6,char n7,char n8)
  29          {
  30   1        char i;
  31   1        P0=0xff;
  32   1        P2=(P2&0x1f)|0xc0;
  33   1        P0=type2[i];
  34   1        P2=(P2&0x1f);
  35   1        switch(i)
  36   1        {
  37   2          case 0:P2=(P2&0x1f)|0xe0; P0=type1[n1];P2=(P2&0x1f);break;
  38   2          case 1:P2=(P2&0x1f)|0xe0; P0=type1[n2];P2=(P2&0x1f);break;  
  39   2          case 2:P2=(P2&0x1f)|0xe0; P0=type1[n3];P2=(P2&0x1f);break;  
  40   2          case 3:P2=(P2&0x1f)|0xe0; P0=type1[n4];P2=(P2&0x1f);break;  
  41   2          case 4:P2=(P2&0x1f)|0xe0; P0=type1[n5];P2=(P2&0x1f);break;      
  42   2          case 5:P2=(P2&0x1f)|0xe0; P0=type1[n6];P2=(P2&0x1f);break;
  43   2          case 6:P2=(P2&0x1f)|0xe0; P0=type1[n7];P2=(P2&0x1f);break;
  44   2          case 7:P2=(P2&0x1f)|0xe0; P0=type1[n8];P2=(P2&0x1f);break;    
  45   2        }
  46   1        if(++i==8)
  47   1          i=0;
  48   1      }
  49          
  50          
  51          void f_display()
  52          {
  53   1        if(temp<10)
  54   1        {
C51 COMPILER V9.60.0.0   MAIN                                                              07/21/2022 16:02:56 PAGE 2   

  55   2          num8=temp;
  56   2          num1=num2=num3=num4=num5=num6=num7=10;
  57   2          
  58   2        }
  59   1        else if(temp>9 && temp<100)
  60   1        {
  61   2          num7=temp/10;num8=temp%10;
  62   2          num1=num2=num3=num4=num5=num6=10;   
  63   2        }
  64   1        else if(temp>99 && temp<1000)
  65   1        {
  66   2          num6=temp/100;num7=temp%100/10;num8=temp%10;
  67   2          num1=num2=num3=num4=num5=10;    
  68   2        } 
  69   1        else if(temp>999 && temp<10000)
  70   1        {
  71   2          num5=temp/1000;num6=temp%1000/100;num7=temp%100/10;num8=temp%10;
  72   2          num1=num2=num3=num4=10;   
  73   2        } 
  74   1        else if(temp>9999)
  75   1        {
  76   2          num4=temp/10000;num5=temp%10000/1000;num6=temp%1000/100;num7=temp%100/10;num8=temp%10;
  77   2          num1=num2=num3=10;  
  78   2        } 
  79   1      }
  80          
  81          
  82          
  83          
  84          
  85          void time0()
  86          {
  87   1        TMOD=(TMOD&0xf0)|0x05;
  88   1        TH0=TH0=0;
  89   1      }
  90          
  91          void time1_int1()
  92          {
  93   1        EA=1;
  94   1        ET1=1;
  95   1        TR1=1;
  96   1        TMOD=(TMOD&0x0f)|0x10;
  97   1        TH1=(65536-2000)/256;
  98   1        TL1=(65536-2000)%256;
  99   1      }
 100          
 101          void initial_all()
 102          {
 103   1        P2=(P2&0x1f)|0xa0;
 104   1        P0=0x00;
 105   1        P2=(P2&0x1f); 
 106   1        P2=(P2&0x1f)|0x80;
 107   1        P0=0xff;
 108   1        P2=(P2&0x1f);   
 109   1        P2=(P2&0x1f)|0xc0;
 110   1        P0=0xff;
 111   1        P2=(P2&0x1f);   
 112   1        P2=(P2&0x1f)|0xe0;
 113   1        P0=0xff;
 114   1        P2=(P2&0x1f);   
 115   1      }
 116          void main()
C51 COMPILER V9.60.0.0   MAIN                                                              07/21/2022 16:02:56 PAGE 3   

 117          {
 118   1        initial_all();
 119   1        time0();
 120   1        time1_int1();
 121   1        num1=num2=num3=num4=num5=num6=num7=num8=10;
 122   1        while(1)
 123   1        {
 124   2         if(f_2ms==1)
 125   2         {
 126   3          f_2ms=0;
 127   3           
 128   3          f_display();
 129   3           
 130   3          
 131   3           
 132   3           
 133   3           
 134   3           
 135   3           
 136   3           
 137   3        
 138   3         }//f_2ms
 139   2        }
 140   1      }
 141          
 142          void cl_time1_int1() interrupt 3
 143          {
 144   1        TH1=(65536-2000)/256;
 145   1        TL1=(65536-2000)%256; 
 146   1        
 147   1        smg_display(num1,num2,num3,num4,num5,num6,num7,num8);
 148   1        
 149   1        f_2ms=1;
 150   1        
 151   1        if(++t_2ms==250)
 152   1        {
 153   2          t_2ms=0;
 154   2          flag=~flag;
 155   2          if(flag==0)
 156   2          {
 157   3            TH0=TL0=0;
 158   3            TR0=1;
 159   3          }
 160   2          else
 161   2          {
 162   3            TR0=0;
 163   3            temp=((TH0<<8)+TL0)*2;
 164   3      
 165   3          }
 166   2        }
 167   1        
 168   1        
 169   1        
 170   1        
 171   1        
 172   1        
 173   1      }//aall
 174          
 175          
 176          
 177          

C51 COMPILER V9.60.0.0   MAIN                                                              07/21/2022 16:02:56 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    849    ----
   CONSTANT SIZE    =     19    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     11       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
